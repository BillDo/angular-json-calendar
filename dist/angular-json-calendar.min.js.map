{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-json-calendar.min.js","webpack:///webpack/bootstrap 3331d2bfc387801491c2?a245","webpack:///./src/index.js?9552","webpack:///./src/index.js?1f39*","webpack:///./src/calendar.provider.js?46b0","webpack:///./src/calendar.provider.js?b2f7*","webpack:///./src/calendar.service.js?2639","webpack:///./src/calendar.service.js?8728*","webpack:///./src/calendar.directive.js?14e7","webpack:///./src/calendar.directive.js?d4aa*","webpack:///./src/calendar.controller.js?3eb8","webpack:///./src/calendar.controller.js?6b53*","webpack:///./src/calendar.html?add9"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","_calendar","_calendar2","_calendar3","angular","provider","bcCalendarConfig","service","bcCalendarService","directive","bcCalendarDirective","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","startDate","Date","toISOString","interval","count","weekdays","letters","abbreviations","words","dayWordType","date1","date2","match","month1","moment","month","month2","year","date","days","getMonth","push","hour","minute","second","format","setDate","getDate","_interopRequireDefault","obj","__esModule","default","linkFunction","$scope","$element","$attrs","vm","restrict","replace","scope","bindToController","bcStartDate","bcInterval","bcCount","bcDayWordType","templateUrl","link","controller","CalendarController","controllerAs","console","log","_activate","$inject","dateDayOfMonth","doMonthsMatch","todayOfMonth","path","html","window","run","put"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,2BAAAH,GACA,gBAAAC,SACAA,QAAA,yBAAAD,IAEAD,EAAA,yBAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GEtDhC,YAEAS,QAAOC,eAAehB,EAAS,cAC3BiB,OAAO,GCHX,IAAAC,GAAAZ,EAAA,GACAa,EAAAb,EAAA,GACAc,EAAAd,EAAA,EDUAN,cCReqB,QAAQpB,OAAO,sBACzBqB,SAAS,mBADCJ,EAAAK,kBAEVC,QAAQ,oBAFEL,EAAAM,mBAGVC,UAAU,aAHAN,EAAAO,sBHoET,SAAS1B,EAAQD,GIxEvB,YAQA,SAAS4B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHhB,OAAOC,eAAehB,EAAS,cAC3BiB,OAAO,GAGX,IAAIe,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM1B,OAAOC,eAAekB,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUR,EAAaa,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBH,EAAYe,UAAWF,GAAiBC,GAAaX,EAAiBH,EAAac,GAAqBd,KCNnhB9B,GAAAuB,iBAAA,WAGT,QAHSA,KDeLK,EAAgBxB,KCfXmB,GAMLnB,KAAK0C,WAAY,GAAIC,OAAOC,cAHlB5C,KAML6C,SAAW,OANN7C,KASL8C,MAAQ,GATH9C,KAYL+C,UACDC,SACI,IACA,IACA,IACA,IACA,IACA,IACA,KAEJC,eACI,MACA,MACA,MACA,MACA,OACA,MACA,OAEJC,OACI,SACA,SACA,UACA,YACA,WACA,SACA,WAtCElD,KA2CLmD,YAAc,gBDFvB,MAPAvB,GCrCST,IDsCLmB,IAAK,OACLzB,MAAO,WCeP,MAAOb,UAtDFmB,ML2HP,SAAStB,EAAQD,GM3HvB,YAQA,SAAS4B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHhB,OAAOC,eAAehB,EAAS,cAC7BiB,OAAO,GAGT,IAAIe,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM1B,OAAOC,eAAekB,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUR,EAAaa,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBH,EAAYe,UAAWF,GAAiBC,GAAaX,EAAiBH,EAAac,GAAqBd,KCNnhB9B,GAAAyB,kBAAA,WAET,QAFSA,KAIL,UDUJG,GAAgBxB,KCdPqB,GD6JX,MA5GAO,GCjDWP,IDkDTiB,IAAK,gBACLzB,MAAO,SCTOuC,EAAOC,GACjB,GAAIC,IAAQ,EACNC,EAASC,OAAOJ,GAAOK,QACvBC,EAASF,OAAOH,GAAOI,OAM7B,OAJIF,KAAWG,IACXJ,GAAQ,GAGLA,KDsEXhB,IAAK,iBACLzB,MAAO,SCAQ4C,EAAOE,GAKlB,IAHA,GAAMC,GAAO,GAAIjB,MAAKgB,EAAMF,EAAO,GAC7BI,KAECD,EAAKE,aAAeL,GACvBI,EAAKE,KAAKP,OAAOI,GAAMI,KAAK,GAAGC,OAAO,GAAGC,OAAO,GAAGC,UACnDP,EAAKQ,QAAQR,EAAKS,UAAY,EAGlC,OAAOR,MDWXvB,IAAK,kBACLzB,MAAO,SCDSiC,GAEZ,GAAId,GAAA,OACE6B,IAEN,KAAK7B,EAAI,EAAOc,EAAJd,EAAWA,GAAK,EACxB6B,EAAKE,KAAK/B,EAGd,OAAO6B,OAxJFxC,MP+RP,SAASxB,EAAQD,EAASM,GQ/RhC,YAaA,SAASoE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GCVhF,QAAShD,KAEZ,UADF,SAyBWmD,GAAaC,EAAQC,EAAUC,EAAQC,IAtBhD,GAAMxD,IACFyD,SAAU,IACVC,SAAS,EACTC,SACAC,kBACIC,YAAa,KACbC,WAAY,KACZC,QAAS,KACTC,cAAe,MAEnBC,YAAAvE,aACAwE,KAAMd,EACNe,WAAA3E,EAAA4E,mBACAC,aAAc,KAGlB,OAAOrE,GDrBXX,OAAOC,eAAehB,EAAS,cAC3BiB,OAAO,IAEXjB,ECFgB2B,qBAHhB,IAAAT,GAAAZ,EAAA,GACAa,EAAAb,EAAA,GDUIc,EAAasD,EAAuBvD,IRkUlC,SAASlB,EAAQD,GU7UvB,YAQA,SAAS4B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHhB,OAAOC,eAAehB,EAAS,cAC3BiB,OAAO,GAGX,IAAIe,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAM1B,OAAOC,eAAekB,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUR,EAAaa,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBH,EAAYe,UAAWF,GAAiBC,GAAaX,EAAiBH,EAAac,GAAqBd,KVmVtgB9B,GAAQ8F,mBAAqB,WWvVnD,QAFSA,GAGLvE,EAAkBE,GAElB,UDSAG,GAAgBxB,KCdX0F,GAOL1F,KAAKmB,iBAAmBA,EACxBnB,KAAKqB,kBAAoBA,EAEzBuE,QAAQC,IAAI,WAAY1E,GAExBnB,KAAK8F,YDuDT,MVuRCJ,GAAmBK,SAAW,mBAAoB,qBUlUnDnE,ECxBS8D,IDyBLpD,IAAK,YACLzB,MAAO,WCLPb,KAAK0C,UAAY1C,KAAK0C,WAAa1C,KAAKmB,iBAAiBuB,UAFjD1C,KAKH+C,SAAW/C,KAAKsF,cAAiBtF,KAAKmB,iBAAiB4B,SAAS/C,KAAKsF,eAClEtF,KAAKmB,iBAAiB4B,SAAS/C,KAAKmB,iBAAiBgC,aAE7DyC,QAAQC,IAAI,cAAe7F,KAAK0C,WAChCkD,QAAQC,IAAI,aAAc7F,KAAK+C,aDmB/BT,IAAK,gBACLzB,MAAO,SCNG+C,GACV,GAAMoC,GAAiBxC,OAAOI,GAAMA,OAC9BqC,EAAgBjG,KAAKqB,kBAAkB4E,cAAcjG,KAAK0C,UAAWkB,GACrEsC,EAAe1C,OAAOxD,KAAK0C,WAAWkB,MAH5B,OAMRqC,IAAmCC,EAAjBF,KDS1B1D,IAAK,gBACLzB,MAAO,eAEPyB,IAAK,aACLzB,MAAO,eAEPyB,IAAK,aACLzB,MAAO,gBChEF6E,MXwZP,SAAS7F,EAAQD,GYxZvB,GAAAuG,GAAA,qEACAC,EAAA,yuBACAC,QAAApF,QAAApB,OAAA,MAAAyG,KAAA,0BAAA7F,GAAgEA,EAAA8F,IAAAJ,EAAAC,MAChEvG,EAAAD,QAAAuG","file":"angular-json-calendar.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _calendar = __webpack_require__(1);\n\t\n\tvar _calendar2 = __webpack_require__(2);\n\t\n\tvar _calendar3 = __webpack_require__(3);\n\t\n\texports.default = angular.module('bc.JsonCalendar', []).provider('bcCalendarConfig', _calendar.bcCalendarConfig).service('bcCalendarService', _calendar2.bcCalendarService).directive('bcCalendar', _calendar3.bcCalendarDirective);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar bcCalendarConfig = exports.bcCalendarConfig = function () {\n\t\n\t    // Define defaults\n\t\n\t    function bcCalendarConfig() {\n\t        _classCallCheck(this, bcCalendarConfig);\n\t\n\t        // The calendar will begin with today\n\t        this.startDate = new Date().toISOString();\n\t\n\t        // The default interval type [days|weeks|months]\n\t        this.interval = 'days';\n\t\n\t        // How many of the interval type should be generated\n\t        this.count = 30;\n\t\n\t        // Define the different possible representations of the weekday\n\t        this.weekdays = {\n\t            letters: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n\t            abbreviations: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n\t            words: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Satday']\n\t        };\n\t\n\t        // Set the default word type (M vs Mon vs Monday)\n\t        this.dayWordType = 'abbreviations';\n\t    }\n\t\n\t    _createClass(bcCalendarConfig, [{\n\t        key: '$get',\n\t        value: function $get() {\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return bcCalendarConfig;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar bcCalendarService = exports.bcCalendarService = function () {\n\t  function bcCalendarService() {\n\t    'ngInject';\n\t\n\t    _classCallCheck(this, bcCalendarService);\n\t  }\n\t\n\t  /**\n\t   * Test if days match\n\t   *\n\t   * @param {Date} date1\n\t   * @param {Date} date2\n\t   * @return {Bool} match\n\t   */\n\t  /*\n\t   *    daysMatch(date1, date2) {\n\t   *\n\t   *        let match = false;\n\t   *        const day1 = moment(date1).date();\n\t   *        const day2 = moment(date2).date();\n\t   *\n\t   *        if (day1 === day2) {\n\t   *            match = true;\n\t   *        }\n\t   *\n\t   *        return match;\n\t   *\n\t   *    }\n\t   */\n\t\n\t  /**\n\t   * Test if months match\n\t   *\n\t   * @param {Date} date1\n\t   * @param {Date} date2\n\t   * @return {Bool} match\n\t   */\n\t\n\t\n\t  _createClass(bcCalendarService, [{\n\t    key: 'doMonthsMatch',\n\t    value: function doMonthsMatch(date1, date2) {\n\t      var match = false;\n\t      var month1 = moment(date1).month();\n\t      var month2 = moment(date2).month();\n\t\n\t      if (month1 === month2) {\n\t        match = true;\n\t      }\n\t\n\t      return match;\n\t    }\n\t\n\t    /**\n\t     * Test if day is today\n\t     *\n\t     * @param {Date} date - The date to check\n\t     * @param {Date} today - The day to check against\n\t     * @return {Bool} isToday\n\t     */\n\t    /*\n\t     *    isToday(date, today) {\n\t     *\n\t     *        today = moment(today).startOf('day');\n\t     *\n\t     *        const dayToTest = moment(date).startOf('day');\n\t     *        const isToday = today.diff(dayToTest) ? false : true;\n\t     *\n\t     *        return isToday;\n\t     *\n\t     *    }\n\t     */\n\t\n\t    /**\n\t     * Update the date with the current time\n\t     *\n\t     * @param {Date} date\n\t     * @return {Date} updatedDate\n\t     */\n\t    /*\n\t     *    updateTime(date) {\n\t     *\n\t     *        let updatedDate;\n\t     *\n\t     *        // Get the current date\n\t     *        const jsDate = new Date().toISOString();\n\t     *        const currentHour = moment(jsDate).hour();\n\t     *        const currentMinutes = moment(jsDate).minutes();\n\t     *\n\t     *        // Zero out seconds and milliseconds\n\t     *        updatedDate = moment(date).set({\n\t     *            hour: currentHour,\n\t     *            minutes: currentMinutes,\n\t     *            second: 0,\n\t     *            millisecond: 0,\n\t     *        }).format();\n\t     *\n\t     *        return updatedDate;\n\t     *\n\t     *    }\n\t     */\n\t\n\t    /**\n\t     * Return an array of days for the passed in month\n\t     *\n\t     * @param {Integer} month\n\t     * @param {Integer} year\n\t     * @return {Array} days\n\t     */\n\t\n\t  }, {\n\t    key: 'getDaysInMonth',\n\t    value: function getDaysInMonth(month, year) {\n\t\n\t      var date = new Date(year, month, 1);\n\t      var days = [];\n\t\n\t      while (date.getMonth() === month) {\n\t        days.push(moment(date).hour(0).minute(0).second(0).format());\n\t        date.setDate(date.getDate() + 1);\n\t      }\n\t\n\t      return days;\n\t    }\n\t\n\t    /**\n\t     * Turn a count (e.g. '6') into an array: '[1,2,3,4,5,6]'\n\t     *\n\t     * @param {Integer} count\n\t     * @return {Array} days\n\t     */\n\t\n\t  }, {\n\t    key: 'createDaysArray',\n\t    value: function createDaysArray(count) {\n\t\n\t      var i = void 0;\n\t      var days = [];\n\t\n\t      for (i = 0; i < count; i += 1) {\n\t        days.push(i);\n\t      }\n\t\n\t      return days;\n\t    }\n\t  }]);\n\t\n\t  return bcCalendarService;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.bcCalendarDirective = bcCalendarDirective;\n\t\n\tvar _calendar = __webpack_require__(4);\n\t\n\tvar _calendar2 = __webpack_require__(5);\n\t\n\tvar _calendar3 = _interopRequireDefault(_calendar2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction bcCalendarDirective() {\n\t    'ngInject';\n\t\n\t    var directive = {\n\t        restrict: 'E',\n\t        replace: true,\n\t        scope: {},\n\t        bindToController: {\n\t            bcStartDate: '@?', // date - default to today\n\t            bcInterval: '@?', // string days|weeks|months - defaults to month\n\t            bcCount: '@?', // integer - default to 1\n\t            bcDayWordType: '@?' // string - default to 'abbreviations'\n\t        },\n\t        templateUrl: _calendar3.default,\n\t        link: linkFunction,\n\t        controller: _calendar.CalendarController,\n\t        controllerAs: 'vm'\n\t    };\n\t\n\t    return directive;\n\t\n\t    /**\n\t     * Link\n\t     */\n\t    function linkFunction($scope, $element, $attrs, vm) {}\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CalendarController = exports.CalendarController = function () {\n\t    CalendarController.$inject = [\"bcCalendarConfig\", \"bcCalendarService\"];\n\t    function CalendarController(bcCalendarConfig, bcCalendarService) {\n\t        'ngInject';\n\t\n\t        _classCallCheck(this, CalendarController);\n\t\n\t        this.bcCalendarConfig = bcCalendarConfig;\n\t        this.bcCalendarService = bcCalendarService;\n\t\n\t        console.log('config: ', bcCalendarConfig);\n\t\n\t        this._activate();\n\t    }\n\t\n\t    _createClass(CalendarController, [{\n\t        key: '_activate',\n\t        value: function _activate() {\n\t            // Define the starting day of the calendar\n\t            this.startDate = this.startDate || this.bcCalendarConfig.startDate;\n\t\n\t            // Define the style for weekday words (M vs Mon vs Monday)\n\t            this.weekdays = this.bcDayWordType ? this.bcCalendarConfig.weekdays[this.bcDayWordType] : this.bcCalendarConfig.weekdays[this.bcCalendarConfig.dayWordType];\n\t\n\t            console.log('startDate: ', this.startDate);\n\t            console.log('weekdays: ', this.weekdays);\n\t        }\n\t\n\t        /**\n\t         * Check to see if the day is prior to the current date\n\t         * This is used to disable the unselectable days\n\t         * TODO: Can I really not just compare dates?\n\t         *\n\t         * @param {Date} day\n\t         * @return {Bool} isBefore\n\t         */\n\t\n\t    }, {\n\t        key: 'isBeforeToday',\n\t        value: function isBeforeToday(date) {\n\t            var dateDayOfMonth = moment(date).date();\n\t            var doMonthsMatch = this.bcCalendarService.doMonthsMatch(this.startDate, date);\n\t            var todayOfMonth = moment(this.startDate).date();\n\t\n\t            // If both days are in the same month and the passed day comes earlier than today\n\t            return doMonthsMatch && dateDayOfMonth < todayOfMonth;\n\t        }\n\t    }, {\n\t        key: 'isDaySelected',\n\t        value: function isDaySelected() {}\n\t    }, {\n\t        key: 'isDayToday',\n\t        value: function isDayToday() {}\n\t    }, {\n\t        key: 'selectDate',\n\t        value: function selectDate() {}\n\t    }]);\n\t\n\t    return CalendarController;\n\t}();\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tvar path = '/Users/bc/Code/open-source/angular-json-calendar/src/calendar.html';\n\tvar html = \"<section class=calendar> <header class=calendar__header> <span class=calendar__day data-ng-repeat=\\\"day in vm.days track by $index\\\"> <strong class=calendar__time> {{ day }} </strong> </span> </header> <div class=calendar__week data-ng-repeat=\\\"week in vm.weeks track by $index\\\"> <span class=calendar__day data-ng-class=\\\"{ 'calendar__day--disabled': vm.isBeforeToday(day),\\n                       'calendar__day--today': vm.isDayToday(day) }\\\" data-ng-click=vm.selectDate(day) data-ng-repeat=\\\"day in week track by $index\\\"> <time class=calendar__time data-ng-class=\\\"{ 'calendar__time--selected': vm.isDaySelected(day) }\\\" datetime=\\\"{{ day | date:'MMMM Do, YYYY' }}\\\" title=\\\"{{ day }}\\\"> {{ day | date:'D' }} </time> </span> </div> </section>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-json-calendar.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3331d2bfc387801491c2\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _calendar = require('./calendar.provider');\n\nvar _calendar2 = require('./calendar.service');\n\nvar _calendar3 = require('./calendar.directive');\n\nexports.default = angular.module('bc.JsonCalendar', []).provider('bcCalendarConfig', _calendar.bcCalendarConfig).service('bcCalendarService', _calendar2.bcCalendarService).directive('bcCalendar', _calendar3.bcCalendarDirective);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { bcCalendarConfig } from './calendar.provider';\nimport { bcCalendarService } from './calendar.service';\nimport { bcCalendarDirective } from './calendar.directive';\n\nexport default angular.module('bc.JsonCalendar', [])\n    .provider('bcCalendarConfig', bcCalendarConfig)\n    .service('bcCalendarService', bcCalendarService)\n    .directive('bcCalendar', bcCalendarDirective)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarConfig = exports.bcCalendarConfig = function () {\n\n    // Define defaults\n\n    function bcCalendarConfig() {\n        _classCallCheck(this, bcCalendarConfig);\n\n        // The calendar will begin with today\n        this.startDate = new Date().toISOString();\n\n        // The default interval type [days|weeks|months]\n        this.interval = 'days';\n\n        // How many of the interval type should be generated\n        this.count = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdays = {\n            letters: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n            abbreviations: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n            words: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Satday']\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.dayWordType = 'abbreviations';\n    }\n\n    _createClass(bcCalendarConfig, [{\n        key: '$get',\n        value: function $get() {\n            return this;\n        }\n    }]);\n\n    return bcCalendarConfig;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.provider.js\n **/","export class bcCalendarConfig {\n\n    // Define defaults\n    constructor() {\n\n        // The calendar will begin with today\n        this.startDate = new Date().toISOString();\n\n        // The default interval type [days|weeks|months]\n        this.interval = 'days';\n\n        // How many of the interval type should be generated\n        this.count = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdays = {\n            letters: [\n                'S',\n                'M',\n                'T',\n                'W',\n                'T',\n                'F',\n                'S',\n            ],\n            abbreviations: [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thur',\n                'Fri',\n                'Sat',\n            ],\n            words: [\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Satday',\n            ],\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.dayWordType = 'abbreviations';\n\n    }\n\n\n\n\n    $get() {\n        return this;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.provider.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarService = exports.bcCalendarService = function () {\n  function bcCalendarService() {\n    'ngInject';\n\n    _classCallCheck(this, bcCalendarService);\n  }\n\n  /**\n   * Test if days match\n   *\n   * @param {Date} date1\n   * @param {Date} date2\n   * @return {Bool} match\n   */\n  /*\n   *    daysMatch(date1, date2) {\n   *\n   *        let match = false;\n   *        const day1 = moment(date1).date();\n   *        const day2 = moment(date2).date();\n   *\n   *        if (day1 === day2) {\n   *            match = true;\n   *        }\n   *\n   *        return match;\n   *\n   *    }\n   */\n\n  /**\n   * Test if months match\n   *\n   * @param {Date} date1\n   * @param {Date} date2\n   * @return {Bool} match\n   */\n\n\n  _createClass(bcCalendarService, [{\n    key: 'doMonthsMatch',\n    value: function doMonthsMatch(date1, date2) {\n      var match = false;\n      var month1 = moment(date1).month();\n      var month2 = moment(date2).month();\n\n      if (month1 === month2) {\n        match = true;\n      }\n\n      return match;\n    }\n\n    /**\n     * Test if day is today\n     *\n     * @param {Date} date - The date to check\n     * @param {Date} today - The day to check against\n     * @return {Bool} isToday\n     */\n    /*\n     *    isToday(date, today) {\n     *\n     *        today = moment(today).startOf('day');\n     *\n     *        const dayToTest = moment(date).startOf('day');\n     *        const isToday = today.diff(dayToTest) ? false : true;\n     *\n     *        return isToday;\n     *\n     *    }\n     */\n\n    /**\n     * Update the date with the current time\n     *\n     * @param {Date} date\n     * @return {Date} updatedDate\n     */\n    /*\n     *    updateTime(date) {\n     *\n     *        let updatedDate;\n     *\n     *        // Get the current date\n     *        const jsDate = new Date().toISOString();\n     *        const currentHour = moment(jsDate).hour();\n     *        const currentMinutes = moment(jsDate).minutes();\n     *\n     *        // Zero out seconds and milliseconds\n     *        updatedDate = moment(date).set({\n     *            hour: currentHour,\n     *            minutes: currentMinutes,\n     *            second: 0,\n     *            millisecond: 0,\n     *        }).format();\n     *\n     *        return updatedDate;\n     *\n     *    }\n     */\n\n    /**\n     * Return an array of days for the passed in month\n     *\n     * @param {Integer} month\n     * @param {Integer} year\n     * @return {Array} days\n     */\n\n  }, {\n    key: 'getDaysInMonth',\n    value: function getDaysInMonth(month, year) {\n\n      var date = new Date(year, month, 1);\n      var days = [];\n\n      while (date.getMonth() === month) {\n        days.push(moment(date).hour(0).minute(0).second(0).format());\n        date.setDate(date.getDate() + 1);\n      }\n\n      return days;\n    }\n\n    /**\n     * Turn a count (e.g. '6') into an array: '[1,2,3,4,5,6]'\n     *\n     * @param {Integer} count\n     * @return {Array} days\n     */\n\n  }, {\n    key: 'createDaysArray',\n    value: function createDaysArray(count) {\n\n      var i = void 0;\n      var days = [];\n\n      for (i = 0; i < count; i += 1) {\n        days.push(i);\n      }\n\n      return days;\n    }\n  }]);\n\n  return bcCalendarService;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.service.js\n **/","export class bcCalendarService {\n\n    constructor(\n    ) {\n        'ngInject';\n\n    }\n\n\n\n\n    /**\n     * Test if days match\n     *\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Bool} match\n     */\n    /*\n     *    daysMatch(date1, date2) {\n     *\n     *        let match = false;\n     *        const day1 = moment(date1).date();\n     *        const day2 = moment(date2).date();\n     *\n     *        if (day1 === day2) {\n     *            match = true;\n     *        }\n     *\n     *        return match;\n     *\n     *    }\n     */\n\n\n    /**\n     * Test if months match\n     *\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Bool} match\n     */\n    doMonthsMatch(date1, date2) {\n        let match = false;\n        const month1 = moment(date1).month();\n        const month2 = moment(date2).month();\n\n        if (month1 === month2) {\n            match = true;\n        }\n\n        return match;\n\n    }\n\n\n    /**\n     * Test if day is today\n     *\n     * @param {Date} date - The date to check\n     * @param {Date} today - The day to check against\n     * @return {Bool} isToday\n     */\n    /*\n     *    isToday(date, today) {\n     *\n     *        today = moment(today).startOf('day');\n     *\n     *        const dayToTest = moment(date).startOf('day');\n     *        const isToday = today.diff(dayToTest) ? false : true;\n     *\n     *        return isToday;\n     *\n     *    }\n     */\n\n\n    /**\n     * Update the date with the current time\n     *\n     * @param {Date} date\n     * @return {Date} updatedDate\n     */\n    /*\n     *    updateTime(date) {\n     *\n     *        let updatedDate;\n     *\n     *        // Get the current date\n     *        const jsDate = new Date().toISOString();\n     *        const currentHour = moment(jsDate).hour();\n     *        const currentMinutes = moment(jsDate).minutes();\n     *\n     *        // Zero out seconds and milliseconds\n     *        updatedDate = moment(date).set({\n     *            hour: currentHour,\n     *            minutes: currentMinutes,\n     *            second: 0,\n     *            millisecond: 0,\n     *        }).format();\n     *\n     *        return updatedDate;\n     *\n     *    }\n     */\n\n\n\n\n\n\n\n\n\n\n    /**\n     * Return an array of days for the passed in month\n     *\n     * @param {Integer} month\n     * @param {Integer} year\n     * @return {Array} days\n     */\n    getDaysInMonth(month, year) {\n\n        const date = new Date(year, month, 1);\n        const days = [];\n\n        while (date.getMonth() === month) {\n            days.push(moment(date).hour(0).minute(0).second(0).format());\n            date.setDate(date.getDate() + 1);\n        }\n\n        return days;\n\n    }\n\n\n    /**\n     * Turn a count (e.g. '6') into an array: '[1,2,3,4,5,6]'\n     *\n     * @param {Integer} count\n     * @return {Array} days\n     */\n    createDaysArray(count) {\n\n        let i;\n        const days = [];\n\n        for (i = 0; i < count; i += 1) {\n            days.push(i);\n        }\n\n        return days;\n\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.service.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcCalendarDirective = bcCalendarDirective;\n\nvar _calendar = require('./calendar.controller');\n\nvar _calendar2 = require('./calendar.html');\n\nvar _calendar3 = _interopRequireDefault(_calendar2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcCalendarDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?', // date - default to today\n            bcInterval: '@?', // string days|weeks|months - defaults to month\n            bcCount: '@?', // integer - default to 1\n            bcDayWordType: '@?' // string - default to 'abbreviations'\n        },\n        templateUrl: _calendar3.default,\n        link: linkFunction,\n        controller: _calendar.CalendarController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.directive.js\n **/","import { CalendarController } from './calendar.controller';\nimport template from './calendar.html';\n\nexport function bcCalendarDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?', // date - default to today\n            bcInterval: '@?', // string days|weeks|months - defaults to month\n            bcCount: '@?', // integer - default to 1\n            bcDayWordType: '@?' // string - default to 'abbreviations'\n        },\n        templateUrl: template,\n        link: linkFunction,\n        controller: CalendarController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {\n\n    }\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CalendarController = exports.CalendarController = function () {\n    function CalendarController(bcCalendarConfig, bcCalendarService) {\n        'ngInject';\n\n        _classCallCheck(this, CalendarController);\n\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n        console.log('config: ', bcCalendarConfig);\n\n        this._activate();\n    }\n\n    _createClass(CalendarController, [{\n        key: '_activate',\n        value: function _activate() {\n            // Define the starting day of the calendar\n            this.startDate = this.startDate || this.bcCalendarConfig.startDate;\n\n            // Define the style for weekday words (M vs Mon vs Monday)\n            this.weekdays = this.bcDayWordType ? this.bcCalendarConfig.weekdays[this.bcDayWordType] : this.bcCalendarConfig.weekdays[this.bcCalendarConfig.dayWordType];\n\n            console.log('startDate: ', this.startDate);\n            console.log('weekdays: ', this.weekdays);\n        }\n\n        /**\n         * Check to see if the day is prior to the current date\n         * This is used to disable the unselectable days\n         * TODO: Can I really not just compare dates?\n         *\n         * @param {Date} day\n         * @return {Bool} isBefore\n         */\n\n    }, {\n        key: 'isBeforeToday',\n        value: function isBeforeToday(date) {\n            var dateDayOfMonth = moment(date).date();\n            var doMonthsMatch = this.bcCalendarService.doMonthsMatch(this.startDate, date);\n            var todayOfMonth = moment(this.startDate).date();\n\n            // If both days are in the same month and the passed day comes earlier than today\n            return doMonthsMatch && dateDayOfMonth < todayOfMonth;\n        }\n    }, {\n        key: 'isDaySelected',\n        value: function isDaySelected() {}\n    }, {\n        key: 'isDayToday',\n        value: function isDayToday() {}\n    }, {\n        key: 'selectDate',\n        value: function selectDate() {}\n    }]);\n\n    return CalendarController;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.controller.js\n **/","export class CalendarController {\n\n    constructor(\n        bcCalendarConfig, bcCalendarService\n    ) {\n        'ngInject';\n\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n        console.log('config: ', bcCalendarConfig);\n\n        this._activate();\n\n    }\n\n\n\n\n    _activate() {\n        // Define the starting day of the calendar\n        this.startDate = this.startDate || this.bcCalendarConfig.startDate;\n\n        // Define the style for weekday words (M vs Mon vs Monday)\n        this.weekdays = this.bcDayWordType ?  this.bcCalendarConfig.weekdays[this.bcDayWordType] :\n                this.bcCalendarConfig.weekdays[this.bcCalendarConfig.dayWordType];\n\n        console.log('startDate: ', this.startDate);\n        console.log('weekdays: ', this.weekdays);\n\n\n    }\n\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     * TODO: Can I really not just compare dates?\n     *\n     * @param {Date} day\n     * @return {Bool} isBefore\n     */\n    isBeforeToday(date) {\n        const dateDayOfMonth = moment(date).date();\n        const doMonthsMatch = this.bcCalendarService.doMonthsMatch(this.startDate, date);\n        const todayOfMonth = moment(this.startDate).date();\n\n        // If both days are in the same month and the passed day comes earlier than today\n        return (doMonthsMatch && (dateDayOfMonth < todayOfMonth));\n    }\n\n\n    isDaySelected() {\n    }\n\n\n    isDayToday() {\n    }\n\n\n    selectDate() {\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.controller.js\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/calendar.html';\nvar html = \"<section class=calendar> <header class=calendar__header> <span class=calendar__day data-ng-repeat=\\\"day in vm.days track by $index\\\"> <strong class=calendar__time> {{ day }} </strong> </span> </header> <div class=calendar__week data-ng-repeat=\\\"week in vm.weeks track by $index\\\"> <span class=calendar__day data-ng-class=\\\"{ 'calendar__day--disabled': vm.isBeforeToday(day),\\n                       'calendar__day--today': vm.isDayToday(day) }\\\" data-ng-click=vm.selectDate(day) data-ng-repeat=\\\"day in week track by $index\\\"> <time class=calendar__time data-ng-class=\\\"{ 'calendar__time--selected': vm.isDaySelected(day) }\\\" datetime=\\\"{{ day | date:'MMMM Do, YYYY' }}\\\" title=\\\"{{ day }}\\\"> {{ day | date:'D' }} </time> </span> </div> </section>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/calendar.html\n ** module id = 5\n ** module chunks = 0 1\n **/"],"sourceRoot":""}