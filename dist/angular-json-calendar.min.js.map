{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-json-calendar.min.js","webpack:///webpack/bootstrap f71293c34bffa32df252?4b77","webpack:///./src/index.js?9552","webpack:///./src/index.js?1f39*","webpack:///./src/calendar.provider.js?46b0","webpack:///./src/calendar.provider.js?b2f7*","webpack:///./src/templates/day.inner.html?ec6f","webpack:///./src/calendar.service.js?2639","webpack:///./src/calendar.service.js?8728*","webpack:///./src/calendar.directive.js?14e7","webpack:///./src/calendar.directive.js?d4aa*","webpack:///./src/calendar.controller.js?3eb8","webpack:///./src/calendar.controller.js?6b53*","webpack:///./src/templates/calendar.html?2144","webpack:///./src/templates/year.html?5759","webpack:///./src/templates/month.html?ef61","webpack:///./src/templates/week.html?4807","webpack:///./src/templates/day.html?9306","webpack:///./src/month.directive.js?4d7d","webpack:///./src/month.directive.js?369b*","webpack:///./src/week.directive.js?eb5f","webpack:///./src/week.directive.js?2d44*","webpack:///./src/day.directive.js?a3c1","webpack:///./src/day.directive.js?de60*"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","_calendar","_calendar2","_calendar3","_month","_week","_day","angular","provider","bcCalendarConfig","service","bcCalendarService","directive","bcCalendarDirective","bcMonthDirective","bcWeekDirective","bcDayDirective","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_dayInner","_dayInner2","_this","startDate","moment","Date","startOf","toISOString","nestingDepth","days","weekdayStyle","letter","abbreviation","word","weekTitleFormat","showHeader","dayTemplate","setDayTemplate","template","userDayTemplate","path","html","window","run","put","WEEK_LENGTH","date","isBefore","isSame","count","push","pad","missingDays","integerToArray","day","subtraction","parseInt","previous","subtract","unshift","collection","direction","arguments","concat","group","groupsize","sets","chunks","splice","firstDay","lastDay","SATURDAY","SUNDAY","padBlankTiles","chunk","allDays","calendar","month","dayOfMonth","daysInMonth","slice","padDaysLeft","start","end","secondsInDay","secondsInYear","diffence","unix","Math","floor","$compile","linkFunction","$scope","$element","$attrs","vm","getTemplateUrl","templates","year","_year2","_month2","week","_week2","_day2","restrict","replace","scope","bindToController","bcStartDate","bcEndDate","bcNestingDepth","bcDays","bcWeekTitleFormat","bcDateSelected","bcShowHeader","bcDayTemplate","link","templateUrl","controller","CalendarController","controllerAs","$inject","_year","$templateCache","_activate","today","durationInDays","weekdays","_buildDays","_buildCalendar","selectedDate","templateLocation","_templateLocation","depth","bcCollection","organizeMonths","organizeWeeks","dateIsBeforeToday","isDayToday","limit","counter","add"],"mappings":"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","file":"angular-json-calendar.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _calendar = __webpack_require__(1);\n\t\n\tvar _calendar2 = __webpack_require__(3);\n\t\n\tvar _calendar3 = __webpack_require__(4);\n\t\n\tvar _month = __webpack_require__(11);\n\t\n\tvar _week = __webpack_require__(12);\n\t\n\tvar _day = __webpack_require__(13);\n\t\n\texports.default = angular.module('bc.JsonCalendar', []).provider('bcCalendarConfig', _calendar.bcCalendarConfig).service('bcCalendarService', _calendar2.bcCalendarService).directive('bcCalendar', _calendar3.bcCalendarDirective).directive('bcMonth', _month.bcMonthDirective).directive('bcWeek', _week.bcWeekDirective).directive('bcDay', _day.bcDayDirective);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.bcCalendarConfig = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _dayInner = __webpack_require__(2);\n\t\n\tvar _dayInner2 = _interopRequireDefault(_dayInner);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar bcCalendarConfig = exports.bcCalendarConfig = function () {\n\t\n\t    // Define defaults\n\t\n\t    function bcCalendarConfig() {\n\t        'ngInject';\n\t\n\t        // The calendar will begin with today\n\t\n\t        var _this = this;\n\t\n\t        _classCallCheck(this, bcCalendarConfig);\n\t\n\t        this.startDate = moment(new Date()).startOf('day').toISOString();\n\t\n\t        // The default interval type [day|week|month]\n\t        this.nestingDepth = 'month';\n\t\n\t        // How many days should be generated\n\t        this.days = 30;\n\t\n\t        // Define the different possible representations of the weekday\n\t        this.weekdayStyle = {\n\t            letter: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n\t            abbreviation: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n\t            word: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Satday']\n\t        };\n\t\n\t        // Set the default word type (M vs Mon vs Monday)\n\t        this.weekTitleFormat = 'abbreviation';\n\t\n\t        // Should the calendar's header be visible?\n\t        this.showHeader = true;\n\t\n\t        // Define the default template for a day\n\t        this.dayTemplate = _dayInner2.default;\n\t\n\t        // Allow the user to set a custom template\n\t        this.setDayTemplate = function (template) {\n\t            _this.userDayTemplate = template;\n\t        };\n\t    }\n\t\n\t    _createClass(bcCalendarConfig, [{\n\t        key: '$get',\n\t        value: function $get() {\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return bcCalendarConfig;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/day.inner.html';\n\tvar html = \"<div> <time class=bc-calendar__day-time datetime=\\\"{{ day.date | date:'MMMM Do, YYYY' }}\\\" title=\\\"{{ day.date }}\\\" data-ng-if=\\\"day.date && day.date.length > 3\\\"> {{ day.date | date:'MM/dd/yy' }} <small> {{ day.date | date:'EEE' }} </small> </time> <span class=bc-calendar__day-time data-ng-if=!day.date></span> </div>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar bcCalendarService = exports.bcCalendarService = function () {\n\t    function bcCalendarService() {\n\t        'ngInject';\n\t\n\t        _classCallCheck(this, bcCalendarService);\n\t\n\t        this.WEEK_LENGTH = 7;\n\t    }\n\t\n\t    /**\n\t     * Check to see if the day is prior to the current date\n\t     * This is used to disable the unselectable days\n\t     *\n\t     * @param {Date} day\n\t     * @return {Bool}\n\t     */\n\t\n\t\n\t    _createClass(bcCalendarService, [{\n\t        key: 'dateIsBeforeToday',\n\t        value: function dateIsBeforeToday(date) {\n\t            return moment(date).isBefore(this.startDate);\n\t        }\n\t\n\t        /**\n\t         * Check to see if the day matches the current date\n\t         *\n\t         * @param {Date} date\n\t         * @param {Date} startDate\n\t         * @return {Bool}\n\t         */\n\t\n\t    }, {\n\t        key: 'isDayToday',\n\t        value: function isDayToday(date, startDate) {\n\t            return moment(date).isSame(startDate);\n\t        }\n\t\n\t        /**\n\t         * Turn a integer (e.g. '6') into an array: '[1,2,3,4,5,6]'\n\t         *\n\t         * @param {Integer} count\n\t         * @return {Array} days\n\t         */\n\t\n\t    }, {\n\t        key: 'integerToArray',\n\t        value: function integerToArray(count) {\n\t            var i = void 0;\n\t            var days = [];\n\t\n\t            for (i = 0; i < count; i += 1) {\n\t                days.push(i);\n\t            }\n\t\n\t            return days;\n\t        }\n\t\n\t        /**\n\t         * Pad the beginning of a week\n\t         *\n\t         * @param {String} startDate - date to to work back from\n\t         * @param {Array} count - how many days to pad\n\t         * @return {Array} pad\n\t         */\n\t\n\t    }, {\n\t        key: 'padDaysLeft',\n\t        value: function padDaysLeft(startDate, count) {\n\t            var pad = [];\n\t            var missingDays = this.integerToArray(count);\n\t\n\t            // Loop through missing days\n\t            for (var day in missingDays) {\n\t                // How many days to go back\n\t                var subtraction = parseInt(day, 10) + 1;\n\t\n\t                // Find that day\n\t                var previous = moment(startDate).subtract(subtraction, 'days').toISOString();\n\t\n\t                // Add to the beginning of the array\n\t                pad.unshift({\n\t                    date: previous\n\t                });\n\t            }\n\t\n\t            return pad;\n\t        }\n\t\n\t        /**\n\t         * Pad a collection with blank tiles at the beginning\n\t         *\n\t         * @param {Array} collection\n\t         * @param {Integer} count\n\t         * @return {Array} paddedCollection\n\t         */\n\t\n\t    }, {\n\t        key: 'padBlankTiles',\n\t        value: function padBlankTiles(collection, count) {\n\t            var direction = arguments.length <= 2 || arguments[2] === undefined ? 'left' : arguments[2];\n\t\n\t            var i = void 0;\n\t            var days = [];\n\t\n\t            // Create array\n\t            for (i = 0; i < count; i += 1) {\n\t                days.push({\n\t                    date: null\n\t                });\n\t            }\n\t\n\t            // If direction is 'right'\n\t            if (direction === 'right') {\n\t                // pad the end\n\t                return collection.concat(days);\n\t            } else if (direction === 'left') {\n\t                // otherwise pad the beginning\n\t                return days.concat(collection);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Split an array into chunks and return an array of these chunks\n\t         *\n\t         * @param {Array} group\n\t         * @param {Integer} groupsize - Chunk size. Defaults to 7 (one week).\n\t         * @return {Array} chunks\n\t         */\n\t\n\t    }, {\n\t        key: 'chunk',\n\t        value: function chunk(group) {\n\t            var groupsize = arguments.length <= 1 || arguments[1] === undefined ? this.WEEK_LENGTH : arguments[1];\n\t\n\t            var sets = [];\n\t            var i = 0;\n\t            var chunks = group.length / parseInt(groupsize, 10);\n\t\n\t            while (i < chunks) {\n\t                sets[i] = group.splice(0, groupsize);\n\t                i = i + 1;\n\t            }\n\t\n\t            return sets;\n\t        }\n\t\n\t        /**\n\t         * Organize a collection of days into sub collections of weeks\n\t         *\n\t         * @param {Array} days - array of days\n\t         * @return {Array} collection\n\t         */\n\t\n\t    }, {\n\t        key: 'organizeWeeks',\n\t        value: function organizeWeeks(days) {\n\t            // Determine the day of the week that the calendar starts and ends on\n\t            var firstDay = moment(days[0].date).day();\n\t            var lastDay = moment(days[days.length - 1].date).day();\n\t            var SATURDAY = 6;\n\t            var SUNDAY = 0;\n\t\n\t            // If the first day is after Sunday\n\t            if (firstDay > SUNDAY) {\n\t                // Pad with blank tiles so the first day is lined up in the correct weekday column\n\t                days = this.padBlankTiles(days, firstDay, 'left');\n\t            }\n\t\n\t            // If the last day is before Saturday\n\t            if (lastDay < SATURDAY) {\n\t                // Pad with blank tiles so that the last week's days are in the correct weekday column\n\t                days = this.padBlankTiles(days, this.WEEK_LENGTH - (lastDay + 1), 'right');\n\t            }\n\t\n\t            return this.chunk(days);\n\t        }\n\t\n\t        /**\n\t         * Organize by month\n\t         *\n\t         * @param {Array} allDays - An array of all days\n\t         * @return {Array} collection - days organized into weeks and months\n\t         */\n\t\n\t    }, {\n\t        key: 'organizeMonths',\n\t        value: function organizeMonths(allDays) {\n\t            var calendar = [];\n\t            var SATURDAY = 6;\n\t            var SUNDAY = 0;\n\t            var collection = allDays;\n\t            var month = void 0;\n\t            var dayOfMonth = moment(collection[0].date).date();\n\t            var daysInMonth = moment(collection[0].date).daysInMonth();\n\t\n\t            // Pad the beginning of the month with any missing days\n\t            // If the first day is not the first day of the month\n\t            if (moment(collection[0].date).date() > 0) {\n\t                // Pull this month's days from the collection\n\t                month = collection.slice(0, daysInMonth - (dayOfMonth - 1));\n\t\n\t                // Fill the missing days from the month\n\t                var pad = this.padDaysLeft(month[0].date, dayOfMonth - 1);\n\t\n\t                // Combine with the existing array\n\t                collection = pad.concat(collection);\n\t            }\n\t\n\t            // Split into months\n\t            // As long as there are days left in the collection\n\t            while (collection.length > 0) {\n\t\n\t                // Get the day of the month for the first date of the collection eg. '24'\n\t                dayOfMonth = moment(collection[0].date).date();\n\t\n\t                // Determine how many days there are this month (total)\n\t                daysInMonth = moment(collection[0].date).daysInMonth();\n\t\n\t                // Pull this month's days from the collection\n\t                month = collection.splice(0, daysInMonth - (dayOfMonth - 1));\n\t\n\t                // How many weekdays are prior to the first day of this month?\n\t                var firstDay = moment(month[0].date).day();\n\t\n\t                // If the first day is after Sunday\n\t                if (firstDay > SUNDAY) {\n\t                    // Pad with blank tiles so that the first day is lined up in the correct column\n\t                    month = this.padBlankTiles(month, firstDay, 'left');\n\t                }\n\t\n\t                // How many weekdays are after the last day of the month?\n\t                // (remember: weeks are zero-based)\n\t                var lastDay = moment(month[month.length - 1].date).day();\n\t\n\t                // If blank tiles are needed for the last week\n\t                if (lastDay < SATURDAY) {\n\t                    // Pad with blank tiles so that the first day is lined up in the correct column\n\t                    month = this.padBlankTiles(month, this.WEEK_LENGTH - (lastDay + 1), 'right');\n\t                }\n\t\n\t                // Organize into weeks and add to the calendar array\n\t                calendar.push(this.chunk(month));\n\t            }\n\t\n\t            return calendar;\n\t        }\n\t\n\t        /**\n\t         * Get the duration in days between two dates\n\t         *\n\t         * @param {Date} start\n\t         * @param {Date} end\n\t         * @return {Integer} days\n\t         */\n\t\n\t    }, {\n\t        key: 'durationInDays',\n\t        value: function durationInDays(start, end) {\n\t            var secondsInDay = 86400;\n\t            var secondsInYear = 31536000;\n\t\n\t            // Find the difference when converted to seconds\n\t            var diffence = moment(end).unix() - moment(start).unix();\n\t\n\t            // Convert the difference of seconds back into days\n\t            return Math.floor(diffence % secondsInYear / secondsInDay);\n\t        }\n\t    }]);\n\t\n\t    return bcCalendarService;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tbcCalendarDirective.$inject = [\"$compile\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.bcCalendarDirective = bcCalendarDirective;\n\t\n\tvar _calendar = __webpack_require__(5);\n\t\n\tvar _calendar2 = __webpack_require__(6);\n\t\n\tvar _calendar3 = _interopRequireDefault(_calendar2);\n\t\n\tvar _year = __webpack_require__(7);\n\t\n\tvar _year2 = _interopRequireDefault(_year);\n\t\n\tvar _month = __webpack_require__(8);\n\t\n\tvar _month2 = _interopRequireDefault(_month);\n\t\n\tvar _week = __webpack_require__(9);\n\t\n\tvar _week2 = _interopRequireDefault(_week);\n\t\n\tvar _day = __webpack_require__(10);\n\t\n\tvar _day2 = _interopRequireDefault(_day);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction bcCalendarDirective($compile) {\n\t    'ngInject';\n\t\n\t    // Define possible templates\n\t\n\t    var templates = {\n\t        year: _year2.default,\n\t        month: _month2.default,\n\t        week: _week2.default,\n\t        day: _day2.default\n\t    };\n\t\n\t    var directive = {\n\t        restrict: 'E',\n\t        replace: true,\n\t        scope: {},\n\t        bindToController: {\n\t            bcStartDate: '@?', // date - default to today\n\t            bcEndDate: '@?', // date - if not present, use create using bcDays\n\t            bcNestingDepth: '@?', // string [month|week|day] - defaults: month\n\t            bcDays: '@?', // integer - default to 30 (used to create bcEndDate)\n\t            bcWeekTitleFormat: '@?', // string [word|abbreviation|letter] - default: abbreviation\n\t            bcDateSelected: '&', // function will be called when a date is selected (tap/click)\n\t            bcShowHeader: '=?', // determine if the weekdays header should be created\n\t            bcDayTemplate: '@?'\n\t        },\n\t        link: linkFunction,\n\t        templateUrl: _calendar3.default,\n\t        controller: _calendar.CalendarController,\n\t        controllerAs: 'vm'\n\t    };\n\t\n\t    return directive;\n\t\n\t    /**\n\t     * Link\n\t     */\n\t    function linkFunction($scope, $element, $attrs, vm) {\n\t\n\t        // Set the correct template based on the desired nesting depth\n\t        vm.getTemplateUrl = function () {\n\t            return templates[vm.nestingDepth];\n\t        };\n\t    }\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CalendarController = exports.CalendarController = function () {\n\t    CalendarController.$inject = [\"$templateCache\", \"bcCalendarConfig\", \"bcCalendarService\"];\n\t    function CalendarController($templateCache, bcCalendarConfig, bcCalendarService) {\n\t        'ngInject';\n\t\n\t        _classCallCheck(this, CalendarController);\n\t\n\t        this.$templateCache = $templateCache;\n\t        this.bcCalendarConfig = bcCalendarConfig;\n\t        this.bcCalendarService = bcCalendarService;\n\t\n\t        this._activate();\n\t    }\n\t\n\t    _createClass(CalendarController, [{\n\t        key: '_activate',\n\t        value: function _activate() {\n\t            // Define today's date\n\t            this.today = moment(new Date()).startOf('day');\n\t\n\t            // Define the start date for the calendar\n\t            this.startDate = this.bcStartDate || this.bcCalendarConfig.startDate;\n\t\n\t            // If the end date was defined\n\t            if (this.bcEndDate) {\n\t\n\t                // Define how many days are needed using the end date\n\t                this.days = this.bcCalendarService.durationInDays(this.startDate, this.bcEndDate);\n\t            } else {\n\t\n\t                // Define how many days are needed from the count passed in or the config\n\t                this.days = parseInt(this.bcDays || this.bcCalendarConfig.days, 10);\n\t            }\n\t\n\t            // Define how deep to organize the calendar\n\t            this.nestingDepth = this.bcNestingDepth || this.bcCalendarConfig.nestingDepth;\n\t\n\t            // Define the weekday headers format\n\t            this.weekdays = this.bcWeekTitleFormat ? this.bcCalendarConfig.weekdayStyle[this.bcWeekTitleFormat] : this.bcCalendarConfig.weekdayStyle[this.bcCalendarConfig.weekTitleFormat];\n\t\n\t            // Build array of days\n\t            var days = this._buildDays(this.days, this.startDate);\n\t\n\t            // Build the calendar JSON and expose to the DOM\n\t            this._buildCalendar(days, this.nestingDepth);\n\t\n\t            // Initially no date is selected\n\t            this.selectedDate = null;\n\t\n\t            // Set the visibility of the calendar header\n\t            this.showHeader = typeof this.bcShowHeader === 'boolean' ? this.bcShowHeader : this.bcCalendarConfig.showHeader;\n\t\n\t            // Define the template for an individual day\n\t            // If the user defined a template on the directive\n\t            if (this.bcDayTemplate) {\n\t                // If the user defined a template in the provider\n\t                var templateLocation = 'userDayTemplate.html';\n\t\n\t                // Put the user template into the cache\n\t                this.$templateCache.put(templateLocation, this.bcDayTemplate);\n\t\n\t                // Expose the location to the directive\n\t                this.dayTemplate = templateLocation;\n\t            } else if (this.bcCalendarConfig.userDayTemplate) {\n\t\n\t                // If the user defined a template in the provider\n\t                var _templateLocation = 'userDayTemplate.html';\n\t\n\t                // Put the user template into the cache\n\t                this.$templateCache.put(_templateLocation, this.bcCalendarConfig.userDayTemplate);\n\t\n\t                // Expose the location to the directive\n\t                this.dayTemplate = _templateLocation;\n\t            } else {\n\t                // no template from the user\n\t\n\t                // Expose the default template location to the directive\n\t                this.dayTemplate = this.bcCalendarConfig.dayTemplate;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Build the calendar JSON\n\t         *\n\t         * @param {Array} days\n\t         * @param {String} depth\n\t         * @return {Element} element\n\t         */\n\t\n\t    }, {\n\t        key: '_buildCalendar',\n\t        value: function _buildCalendar(days, depth) {\n\t\n\t            // Call the correct organization method based on the nesting depth\n\t            if (depth === 'month') {\n\t\n\t                this.bcCollection = this.bcCalendarService.organizeMonths(days);\n\t            } else if (depth === 'week') {\n\t\n\t                this.bcCollection = this.bcCalendarService.organizeWeeks(days);\n\t            } else if (depth === 'day') {\n\t\n\t                this.bcCollection = days;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Check to see if the day is prior to the current date\n\t         * This is used to disable the unselectable days\n\t         *\n\t         * @param {Date} date\n\t         * @return {Bool}\n\t         */\n\t\n\t    }, {\n\t        key: 'isBeforeToday',\n\t        value: function isBeforeToday(date) {\n\t            return this.bcCalendarService.dateIsBeforeToday(date);\n\t        }\n\t\n\t        /**\n\t         * Check to see if the day matches the current date\n\t         *\n\t         * @param {Date} date\n\t         * @return {Bool}\n\t         */\n\t\n\t    }, {\n\t        key: 'isDayToday',\n\t        value: function isDayToday(date) {\n\t            return this.bcCalendarService.isDayToday(date, this.startDate);\n\t        }\n\t\n\t        /**\n\t         * Select a date\n\t         *\n\t         * @param {Object} day\n\t         */\n\t\n\t    }, {\n\t        key: 'selectDate',\n\t        value: function selectDate(day) {\n\t\n\t            // Set the selected day\n\t            this.selectedDate = day;\n\t\n\t            // Only call the passed method if it exists and a valid date was chosen\n\t            if (day.date && this.bcDateSelected) {\n\t                this.bcDateSelected({\n\t                    date: day.date\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Build an array of days\n\t         *\n\t         * @param {Integer} limit - how many days to create\n\t         * @param {Date} start - the starting date\n\t         * @return {Array} days\n\t         */\n\t\n\t    }, {\n\t        key: '_buildDays',\n\t        value: function _buildDays(limit, start) {\n\t            var counter = 0;\n\t            var days = [];\n\t            var day = void 0;\n\t\n\t            while (counter < limit) {\n\t                // Create the day\n\t                day = moment(start).add(counter, 'days').toISOString();\n\t\n\t                // Add to the array\n\t                days.push({\n\t                    date: day\n\t                });\n\t\n\t                // Increment the counter\n\t                counter = counter + 1;\n\t            }\n\t\n\t            return days;\n\t        }\n\t    }]);\n\t\n\t    return CalendarController;\n\t}();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tvar path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/calendar.html';\n\tvar html = \"<section class=bc-calendar> <header class=bc-calendar__header data-ng-if=vm.showHeader> <span class=\\\"bc-calendar__day bc-calendar__day--header\\\" data-ng-repeat=\\\"day in vm.weekdays track by $index\\\"> <strong class=bc-calendar__day-title> {{ day }} </strong> </span> </header> <div data-ng-include=vm.getTemplateUrl()></div> </section>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tvar path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/year.html';\n\tvar html = \"<div class=bc-calendar__year data-ng-repeat=\\\"year in vm.bcCollection track by $index\\\"> <bc-month bc-collection=year></bc-month> </div>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tvar path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/month.html';\n\tvar html = \"<div class=bc-calendar__month data-ng-repeat=\\\"month in vm.bcCollection track by $index\\\"> <bc-week bc-collection=month></bc-week> </div>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tvar path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/week.html';\n\tvar html = \"<div class=bc-calendar__week data-ng-repeat=\\\"week in vm.bcCollection track by $index\\\"> <bc-day bc-collection=week></bc-day> </div>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tvar path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/day.html';\n\tvar html = \"<span class=bc-calendar__day data-ng-class=\\\"{ 'bc-calendar__day--disabled': vm.isBeforeToday(day.date),\\n                   'bc-calendar__day--today': vm.isDayToday(day.date),\\n                   'bc-calendar__day--even': $even,\\n                   'bc-calendar__day--pad': !day.date,\\n                   'bc-calendar__day--selected': day.date === vm.selectedDate.date }\\\" data-ng-click=vm.selectDate(day) data-ng-repeat=\\\"day in vm.bcCollection track by $index\\\"> <ng-include src=vm.dayTemplate></ng-include> </span>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.bcMonthDirective = bcMonthDirective;\n\t\n\tvar _month = __webpack_require__(8);\n\t\n\tvar _month2 = _interopRequireDefault(_month);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction bcMonthDirective() {\n\t    'ngInject';\n\t\n\t    var directive = {\n\t        restrict: 'E',\n\t        replace: true,\n\t        scope: {},\n\t        bindToController: {\n\t            bcCollection: '='\n\t        },\n\t        templateUrl: _month2.default,\n\t        controller: function controller() {},\n\t        controllerAs: 'vm'\n\t    };\n\t\n\t    return directive;\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.bcWeekDirective = bcWeekDirective;\n\t\n\tvar _week = __webpack_require__(9);\n\t\n\tvar _week2 = _interopRequireDefault(_week);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction bcWeekDirective() {\n\t    'ngInject';\n\t\n\t    var directive = {\n\t        restrict: 'E',\n\t        replace: true,\n\t        scope: {},\n\t        bindToController: {\n\t            bcCollection: '='\n\t        },\n\t        templateUrl: _week2.default,\n\t        controller: function controller() {},\n\t        controllerAs: 'vm'\n\t    };\n\t\n\t    return directive;\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tbcDayDirective.$inject = [\"bcCalendarConfig\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.bcDayDirective = bcDayDirective;\n\t\n\tvar _day = __webpack_require__(10);\n\t\n\tvar _day2 = _interopRequireDefault(_day);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction bcDayDirective(bcCalendarConfig) {\n\t    'ngInject';\n\t\n\t    var directive = {\n\t        restrict: 'E',\n\t        replace: true,\n\t        scope: {},\n\t        bindToController: {\n\t            bcCollection: '='\n\t        },\n\t        templateUrl: _day2.default,\n\t        controller: function controller() {},\n\t        controllerAs: 'vm'\n\t    };\n\t\n\t    return directive;\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-json-calendar.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f71293c34bffa32df252\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _calendar = require('./calendar.provider');\n\nvar _calendar2 = require('./calendar.service');\n\nvar _calendar3 = require('./calendar.directive');\n\nvar _month = require('./month.directive');\n\nvar _week = require('./week.directive');\n\nvar _day = require('./day.directive');\n\nexports.default = angular.module('bc.JsonCalendar', []).provider('bcCalendarConfig', _calendar.bcCalendarConfig).service('bcCalendarService', _calendar2.bcCalendarService).directive('bcCalendar', _calendar3.bcCalendarDirective).directive('bcMonth', _month.bcMonthDirective).directive('bcWeek', _week.bcWeekDirective).directive('bcDay', _day.bcDayDirective);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { bcCalendarConfig } from './calendar.provider';\nimport { bcCalendarService } from './calendar.service';\nimport { bcCalendarDirective } from './calendar.directive';\nimport { bcMonthDirective } from './month.directive';\nimport { bcWeekDirective } from './week.directive';\nimport { bcDayDirective } from './day.directive';\n\nexport default angular.module('bc.JsonCalendar', [])\n    .provider('bcCalendarConfig', bcCalendarConfig)\n    .service('bcCalendarService', bcCalendarService)\n    .directive('bcCalendar', bcCalendarDirective)\n    .directive('bcMonth', bcMonthDirective)\n    .directive('bcWeek', bcWeekDirective)\n    .directive('bcDay', bcDayDirective)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcCalendarConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dayInner = require('./templates/day.inner.html');\n\nvar _dayInner2 = _interopRequireDefault(_dayInner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarConfig = exports.bcCalendarConfig = function () {\n\n    // Define defaults\n\n    function bcCalendarConfig() {\n        'ngInject';\n\n        // The calendar will begin with today\n\n        var _this = this;\n\n        _classCallCheck(this, bcCalendarConfig);\n\n        this.startDate = moment(new Date()).startOf('day').toISOString();\n\n        // The default interval type [day|week|month]\n        this.nestingDepth = 'month';\n\n        // How many days should be generated\n        this.days = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdayStyle = {\n            letter: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n            abbreviation: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n            word: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Satday']\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.weekTitleFormat = 'abbreviation';\n\n        // Should the calendar's header be visible?\n        this.showHeader = true;\n\n        // Define the default template for a day\n        this.dayTemplate = _dayInner2.default;\n\n        // Allow the user to set a custom template\n        this.setDayTemplate = function (template) {\n            _this.userDayTemplate = template;\n        };\n    }\n\n    _createClass(bcCalendarConfig, [{\n        key: '$get',\n        value: function $get() {\n            return this;\n        }\n    }]);\n\n    return bcCalendarConfig;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.provider.js\n **/","import dayTemplate from './templates/day.inner.html';\n\nexport class bcCalendarConfig {\n\n    // Define defaults\n    constructor() {\n        'ngInject';\n\n        // The calendar will begin with today\n        this.startDate = moment(new Date()).startOf('day').toISOString();\n\n        // The default interval type [day|week|month]\n        this.nestingDepth = 'month';\n\n        // How many days should be generated\n        this.days = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdayStyle = {\n            letter: [\n                'S',\n                'M',\n                'T',\n                'W',\n                'T',\n                'F',\n                'S',\n            ],\n            abbreviation: [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thur',\n                'Fri',\n                'Sat',\n            ],\n            word: [\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Satday',\n            ],\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.weekTitleFormat = 'abbreviation';\n\n        // Should the calendar's header be visible?\n        this.showHeader = true;\n\n        // Define the default template for a day\n        this.dayTemplate = dayTemplate;\n\n        // Allow the user to set a custom template\n        this.setDayTemplate = (template) => {\n            this.userDayTemplate = template;\n        }\n\n    }\n\n\n\n\n    $get() {\n        return this;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.provider.js\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/day.inner.html';\nvar html = \"<div> <time class=bc-calendar__day-time datetime=\\\"{{ day.date | date:'MMMM Do, YYYY' }}\\\" title=\\\"{{ day.date }}\\\" data-ng-if=\\\"day.date && day.date.length > 3\\\"> {{ day.date | date:'MM/dd/yy' }} <small> {{ day.date | date:'EEE' }} </small> </time> <span class=bc-calendar__day-time data-ng-if=!day.date></span> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/day.inner.html\n ** module id = 2\n ** module chunks = 0 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarService = exports.bcCalendarService = function () {\n    function bcCalendarService() {\n        'ngInject';\n\n        _classCallCheck(this, bcCalendarService);\n\n        this.WEEK_LENGTH = 7;\n    }\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n\n\n    _createClass(bcCalendarService, [{\n        key: 'dateIsBeforeToday',\n        value: function dateIsBeforeToday(date) {\n            return moment(date).isBefore(this.startDate);\n        }\n\n        /**\n         * Check to see if the day matches the current date\n         *\n         * @param {Date} date\n         * @param {Date} startDate\n         * @return {Bool}\n         */\n\n    }, {\n        key: 'isDayToday',\n        value: function isDayToday(date, startDate) {\n            return moment(date).isSame(startDate);\n        }\n\n        /**\n         * Turn a integer (e.g. '6') into an array: '[1,2,3,4,5,6]'\n         *\n         * @param {Integer} count\n         * @return {Array} days\n         */\n\n    }, {\n        key: 'integerToArray',\n        value: function integerToArray(count) {\n            var i = void 0;\n            var days = [];\n\n            for (i = 0; i < count; i += 1) {\n                days.push(i);\n            }\n\n            return days;\n        }\n\n        /**\n         * Pad the beginning of a week\n         *\n         * @param {String} startDate - date to to work back from\n         * @param {Array} count - how many days to pad\n         * @return {Array} pad\n         */\n\n    }, {\n        key: 'padDaysLeft',\n        value: function padDaysLeft(startDate, count) {\n            var pad = [];\n            var missingDays = this.integerToArray(count);\n\n            // Loop through missing days\n            for (var day in missingDays) {\n                // How many days to go back\n                var subtraction = parseInt(day, 10) + 1;\n\n                // Find that day\n                var previous = moment(startDate).subtract(subtraction, 'days').toISOString();\n\n                // Add to the beginning of the array\n                pad.unshift({\n                    date: previous\n                });\n            }\n\n            return pad;\n        }\n\n        /**\n         * Pad a collection with blank tiles at the beginning\n         *\n         * @param {Array} collection\n         * @param {Integer} count\n         * @return {Array} paddedCollection\n         */\n\n    }, {\n        key: 'padBlankTiles',\n        value: function padBlankTiles(collection, count) {\n            var direction = arguments.length <= 2 || arguments[2] === undefined ? 'left' : arguments[2];\n\n            var i = void 0;\n            var days = [];\n\n            // Create array\n            for (i = 0; i < count; i += 1) {\n                days.push({\n                    date: null\n                });\n            }\n\n            // If direction is 'right'\n            if (direction === 'right') {\n                // pad the end\n                return collection.concat(days);\n            } else if (direction === 'left') {\n                // otherwise pad the beginning\n                return days.concat(collection);\n            }\n        }\n\n        /**\n         * Split an array into chunks and return an array of these chunks\n         *\n         * @param {Array} group\n         * @param {Integer} groupsize - Chunk size. Defaults to 7 (one week).\n         * @return {Array} chunks\n         */\n\n    }, {\n        key: 'chunk',\n        value: function chunk(group) {\n            var groupsize = arguments.length <= 1 || arguments[1] === undefined ? this.WEEK_LENGTH : arguments[1];\n\n            var sets = [];\n            var i = 0;\n            var chunks = group.length / parseInt(groupsize, 10);\n\n            while (i < chunks) {\n                sets[i] = group.splice(0, groupsize);\n                i = i + 1;\n            }\n\n            return sets;\n        }\n\n        /**\n         * Organize a collection of days into sub collections of weeks\n         *\n         * @param {Array} days - array of days\n         * @return {Array} collection\n         */\n\n    }, {\n        key: 'organizeWeeks',\n        value: function organizeWeeks(days) {\n            // Determine the day of the week that the calendar starts and ends on\n            var firstDay = moment(days[0].date).day();\n            var lastDay = moment(days[days.length - 1].date).day();\n            var SATURDAY = 6;\n            var SUNDAY = 0;\n\n            // If the first day is after Sunday\n            if (firstDay > SUNDAY) {\n                // Pad with blank tiles so the first day is lined up in the correct weekday column\n                days = this.padBlankTiles(days, firstDay, 'left');\n            }\n\n            // If the last day is before Saturday\n            if (lastDay < SATURDAY) {\n                // Pad with blank tiles so that the last week's days are in the correct weekday column\n                days = this.padBlankTiles(days, this.WEEK_LENGTH - (lastDay + 1), 'right');\n            }\n\n            return this.chunk(days);\n        }\n\n        /**\n         * Organize by month\n         *\n         * @param {Array} allDays - An array of all days\n         * @return {Array} collection - days organized into weeks and months\n         */\n\n    }, {\n        key: 'organizeMonths',\n        value: function organizeMonths(allDays) {\n            var calendar = [];\n            var SATURDAY = 6;\n            var SUNDAY = 0;\n            var collection = allDays;\n            var month = void 0;\n            var dayOfMonth = moment(collection[0].date).date();\n            var daysInMonth = moment(collection[0].date).daysInMonth();\n\n            // Pad the beginning of the month with any missing days\n            // If the first day is not the first day of the month\n            if (moment(collection[0].date).date() > 0) {\n                // Pull this month's days from the collection\n                month = collection.slice(0, daysInMonth - (dayOfMonth - 1));\n\n                // Fill the missing days from the month\n                var pad = this.padDaysLeft(month[0].date, dayOfMonth - 1);\n\n                // Combine with the existing array\n                collection = pad.concat(collection);\n            }\n\n            // Split into months\n            // As long as there are days left in the collection\n            while (collection.length > 0) {\n\n                // Get the day of the month for the first date of the collection eg. '24'\n                dayOfMonth = moment(collection[0].date).date();\n\n                // Determine how many days there are this month (total)\n                daysInMonth = moment(collection[0].date).daysInMonth();\n\n                // Pull this month's days from the collection\n                month = collection.splice(0, daysInMonth - (dayOfMonth - 1));\n\n                // How many weekdays are prior to the first day of this month?\n                var firstDay = moment(month[0].date).day();\n\n                // If the first day is after Sunday\n                if (firstDay > SUNDAY) {\n                    // Pad with blank tiles so that the first day is lined up in the correct column\n                    month = this.padBlankTiles(month, firstDay, 'left');\n                }\n\n                // How many weekdays are after the last day of the month?\n                // (remember: weeks are zero-based)\n                var lastDay = moment(month[month.length - 1].date).day();\n\n                // If blank tiles are needed for the last week\n                if (lastDay < SATURDAY) {\n                    // Pad with blank tiles so that the first day is lined up in the correct column\n                    month = this.padBlankTiles(month, this.WEEK_LENGTH - (lastDay + 1), 'right');\n                }\n\n                // Organize into weeks and add to the calendar array\n                calendar.push(this.chunk(month));\n            }\n\n            return calendar;\n        }\n\n        /**\n         * Get the duration in days between two dates\n         *\n         * @param {Date} start\n         * @param {Date} end\n         * @return {Integer} days\n         */\n\n    }, {\n        key: 'durationInDays',\n        value: function durationInDays(start, end) {\n            var secondsInDay = 86400;\n            var secondsInYear = 31536000;\n\n            // Find the difference when converted to seconds\n            var diffence = moment(end).unix() - moment(start).unix();\n\n            // Convert the difference of seconds back into days\n            return Math.floor(diffence % secondsInYear / secondsInDay);\n        }\n    }]);\n\n    return bcCalendarService;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.service.js\n **/","export class bcCalendarService {\n\n    constructor(\n    ) {\n        'ngInject';\n\n        this.WEEK_LENGTH = 7;\n\n    }\n\n\n\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n    dateIsBeforeToday(date) {\n        return moment(date).isBefore(this.startDate);\n    }\n\n\n    /**\n     * Check to see if the day matches the current date\n     *\n     * @param {Date} date\n     * @param {Date} startDate\n     * @return {Bool}\n     */\n    isDayToday(date, startDate) {\n        return moment(date).isSame(startDate);\n    }\n\n\n    /**\n     * Turn a integer (e.g. '6') into an array: '[1,2,3,4,5,6]'\n     *\n     * @param {Integer} count\n     * @return {Array} days\n     */\n    integerToArray(count) {\n        let i;\n        const days = [];\n\n        for (i = 0; i < count; i += 1) {\n            days.push(i);\n        }\n\n        return days;\n    }\n\n\n    /**\n     * Pad the beginning of a week\n     *\n     * @param {String} startDate - date to to work back from\n     * @param {Array} count - how many days to pad\n     * @return {Array} pad\n     */\n    padDaysLeft(startDate, count) {\n        const pad = [];\n        const missingDays = this.integerToArray(count);\n\n        // Loop through missing days\n        for (const day in missingDays) {\n            // How many days to go back\n            const subtraction = parseInt(day, 10) + 1;\n\n            // Find that day\n            const previous = moment(startDate).subtract((subtraction), 'days').toISOString();\n\n            // Add to the beginning of the array\n            pad.unshift({\n                date: previous,\n            });\n        }\n\n        return pad;\n    }\n\n\n    /**\n     * Pad a collection with blank tiles at the beginning\n     *\n     * @param {Array} collection\n     * @param {Integer} count\n     * @return {Array} paddedCollection\n     */\n    padBlankTiles(collection, count, direction = 'left') {\n        let i;\n        const days = [];\n\n        // Create array\n        for (i = 0; i < count; i += 1) {\n            days.push({\n                date: null,\n            });\n        }\n\n        // If direction is 'right'\n        if (direction === 'right') {\n            // pad the end\n            return collection.concat(days);\n        } else if (direction === 'left') {\n            // otherwise pad the beginning\n            return days.concat(collection);\n        }\n\n    }\n\n\n    /**\n     * Split an array into chunks and return an array of these chunks\n     *\n     * @param {Array} group\n     * @param {Integer} groupsize - Chunk size. Defaults to 7 (one week).\n     * @return {Array} chunks\n     */\n    chunk(group, groupsize = this.WEEK_LENGTH) {\n        const sets = [];\n        let i = 0;\n        const chunks = group.length / parseInt(groupsize, 10);\n\n        while(i < chunks) {\n            sets[i] = group.splice(0, groupsize);\n            i = i + 1;\n        }\n\n        return sets;\n    }\n\n\n    /**\n     * Organize a collection of days into sub collections of weeks\n     *\n     * @param {Array} days - array of days\n     * @return {Array} collection\n     */\n    organizeWeeks(days) {\n        // Determine the day of the week that the calendar starts and ends on\n        const firstDay = moment(days[0].date).day();\n        const lastDay = moment(days[days.length - 1].date).day();\n        const SATURDAY = 6;\n        const SUNDAY = 0;\n\n        // If the first day is after Sunday\n        if (firstDay > SUNDAY) {\n            // Pad with blank tiles so the first day is lined up in the correct weekday column\n            days = this.padBlankTiles(days, firstDay, 'left');\n        }\n\n        // If the last day is before Saturday\n        if (lastDay < SATURDAY) {\n            // Pad with blank tiles so that the last week's days are in the correct weekday column\n            days = this.padBlankTiles(days,this.WEEK_LENGTH - (lastDay + 1), 'right');\n        }\n\n        return this.chunk(days);\n    }\n\n\n    /**\n     * Organize by month\n     *\n     * @param {Array} allDays - An array of all days\n     * @return {Array} collection - days organized into weeks and months\n     */\n    organizeMonths(allDays) {\n        const calendar = [];\n        const SATURDAY = 6;\n        const SUNDAY = 0;\n        let collection = allDays;\n        let month;\n        let dayOfMonth = moment(collection[0].date).date();\n        let daysInMonth = moment(collection[0].date).daysInMonth();\n\n        // Pad the beginning of the month with any missing days\n        // If the first day is not the first day of the month\n        if (moment(collection[0].date).date() > 0) {\n            // Pull this month's days from the collection\n            month = collection.slice(0, (daysInMonth - (dayOfMonth - 1)));\n\n            // Fill the missing days from the month\n            const pad = this.padDaysLeft(month[0].date, (dayOfMonth - 1));\n\n            // Combine with the existing array\n            collection = pad.concat(collection);\n        }\n\n\n        // Split into months\n        // As long as there are days left in the collection\n        while (collection.length > 0) {\n\n            // Get the day of the month for the first date of the collection eg. '24'\n            dayOfMonth = moment(collection[0].date).date();\n\n            // Determine how many days there are this month (total)\n            daysInMonth = moment(collection[0].date).daysInMonth();\n\n            // Pull this month's days from the collection\n            month = collection.splice(0, (daysInMonth - (dayOfMonth - 1)));\n\n            // How many weekdays are prior to the first day of this month?\n            const firstDay = moment(month[0].date).day();\n\n            // If the first day is after Sunday\n            if (firstDay > SUNDAY) {\n                // Pad with blank tiles so that the first day is lined up in the correct column\n                month = this.padBlankTiles(month, firstDay, 'left');\n            }\n\n            // How many weekdays are after the last day of the month?\n            // (remember: weeks are zero-based)\n            const lastDay = moment(month[month.length - 1].date).day();\n\n            // If blank tiles are needed for the last week\n            if (lastDay < SATURDAY) {\n                // Pad with blank tiles so that the first day is lined up in the correct column\n                month = this.padBlankTiles(month, this.WEEK_LENGTH - (lastDay + 1), 'right');\n            }\n\n            // Organize into weeks and add to the calendar array\n            calendar.push(this.chunk(month));\n\n        }\n\n\n        return calendar;\n\n    }\n\n\n    /**\n     * Get the duration in days between two dates\n     *\n     * @param {Date} start\n     * @param {Date} end\n     * @return {Integer} days\n     */\n    durationInDays(start, end) {\n        const secondsInDay = 86400;\n        const secondsInYear = 31536000;\n\n        // Find the difference when converted to seconds\n        const diffence = moment(end).unix() - moment(start).unix();\n\n        // Convert the difference of seconds back into days\n        return Math.floor((diffence % secondsInYear) / secondsInDay);\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.service.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcCalendarDirective = bcCalendarDirective;\n\nvar _calendar = require('./calendar.controller');\n\nvar _calendar2 = require('./templates/calendar.html');\n\nvar _calendar3 = _interopRequireDefault(_calendar2);\n\nvar _year = require('./templates/year.html');\n\nvar _year2 = _interopRequireDefault(_year);\n\nvar _month = require('./templates/month.html');\n\nvar _month2 = _interopRequireDefault(_month);\n\nvar _week = require('./templates/week.html');\n\nvar _week2 = _interopRequireDefault(_week);\n\nvar _day = require('./templates/day.html');\n\nvar _day2 = _interopRequireDefault(_day);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcCalendarDirective($compile) {\n    'ngInject';\n\n    // Define possible templates\n\n    var templates = {\n        year: _year2.default,\n        month: _month2.default,\n        week: _week2.default,\n        day: _day2.default\n    };\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?', // date - default to today\n            bcEndDate: '@?', // date - if not present, use create using bcDays\n            bcNestingDepth: '@?', // string [month|week|day] - defaults: month\n            bcDays: '@?', // integer - default to 30 (used to create bcEndDate)\n            bcWeekTitleFormat: '@?', // string [word|abbreviation|letter] - default: abbreviation\n            bcDateSelected: '&', // function will be called when a date is selected (tap/click)\n            bcShowHeader: '=?', // determine if the weekdays header should be created\n            bcDayTemplate: '@?'\n        },\n        link: linkFunction,\n        templateUrl: _calendar3.default,\n        controller: _calendar.CalendarController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {\n\n        // Set the correct template based on the desired nesting depth\n        vm.getTemplateUrl = function () {\n            return templates[vm.nestingDepth];\n        };\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.directive.js\n **/","import { CalendarController } from './calendar.controller';\nimport calendarTemplate from './templates/calendar.html';\nimport yearTemplate from './templates/year.html';\nimport monthTemplate from './templates/month.html';\nimport weekTemplate from './templates/week.html';\nimport dayTemplate from './templates/day.html';\n\n\nexport function bcCalendarDirective(\n    $compile\n) {\n    'ngInject';\n\n    // Define possible templates\n    const templates = {\n        year: yearTemplate,\n        month: monthTemplate,\n        week: weekTemplate,\n        day: dayTemplate,\n    };\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?',       // date - default to today\n            bcEndDate: '@?',         // date - if not present, use create using bcDays\n            bcNestingDepth: '@?',    // string [month|week|day] - defaults: month\n            bcDays: '@?',            // integer - default to 30 (used to create bcEndDate)\n            bcWeekTitleFormat: '@?', // string [word|abbreviation|letter] - default: abbreviation\n            bcDateSelected: '&',     // function will be called when a date is selected (tap/click)\n            bcShowHeader: '=?',      // determine if the weekdays header should be created\n            bcDayTemplate: '@?',\n        },\n        link: linkFunction,\n        templateUrl: calendarTemplate,\n        controller: CalendarController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n\n\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {\n\n        // Set the correct template based on the desired nesting depth\n        vm.getTemplateUrl = () => {\n            return templates[vm.nestingDepth];\n        };\n\n    }\n\n\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CalendarController = exports.CalendarController = function () {\n    function CalendarController($templateCache, bcCalendarConfig, bcCalendarService) {\n        'ngInject';\n\n        _classCallCheck(this, CalendarController);\n\n        this.$templateCache = $templateCache;\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n        this._activate();\n    }\n\n    _createClass(CalendarController, [{\n        key: '_activate',\n        value: function _activate() {\n            // Define today's date\n            this.today = moment(new Date()).startOf('day');\n\n            // Define the start date for the calendar\n            this.startDate = this.bcStartDate || this.bcCalendarConfig.startDate;\n\n            // If the end date was defined\n            if (this.bcEndDate) {\n\n                // Define how many days are needed using the end date\n                this.days = this.bcCalendarService.durationInDays(this.startDate, this.bcEndDate);\n            } else {\n\n                // Define how many days are needed from the count passed in or the config\n                this.days = parseInt(this.bcDays || this.bcCalendarConfig.days, 10);\n            }\n\n            // Define how deep to organize the calendar\n            this.nestingDepth = this.bcNestingDepth || this.bcCalendarConfig.nestingDepth;\n\n            // Define the weekday headers format\n            this.weekdays = this.bcWeekTitleFormat ? this.bcCalendarConfig.weekdayStyle[this.bcWeekTitleFormat] : this.bcCalendarConfig.weekdayStyle[this.bcCalendarConfig.weekTitleFormat];\n\n            // Build array of days\n            var days = this._buildDays(this.days, this.startDate);\n\n            // Build the calendar JSON and expose to the DOM\n            this._buildCalendar(days, this.nestingDepth);\n\n            // Initially no date is selected\n            this.selectedDate = null;\n\n            // Set the visibility of the calendar header\n            this.showHeader = typeof this.bcShowHeader === 'boolean' ? this.bcShowHeader : this.bcCalendarConfig.showHeader;\n\n            // Define the template for an individual day\n            // If the user defined a template on the directive\n            if (this.bcDayTemplate) {\n                // If the user defined a template in the provider\n                var templateLocation = 'userDayTemplate.html';\n\n                // Put the user template into the cache\n                this.$templateCache.put(templateLocation, this.bcDayTemplate);\n\n                // Expose the location to the directive\n                this.dayTemplate = templateLocation;\n            } else if (this.bcCalendarConfig.userDayTemplate) {\n\n                // If the user defined a template in the provider\n                var _templateLocation = 'userDayTemplate.html';\n\n                // Put the user template into the cache\n                this.$templateCache.put(_templateLocation, this.bcCalendarConfig.userDayTemplate);\n\n                // Expose the location to the directive\n                this.dayTemplate = _templateLocation;\n            } else {\n                // no template from the user\n\n                // Expose the default template location to the directive\n                this.dayTemplate = this.bcCalendarConfig.dayTemplate;\n            }\n        }\n\n        /**\n         * Build the calendar JSON\n         *\n         * @param {Array} days\n         * @param {String} depth\n         * @return {Element} element\n         */\n\n    }, {\n        key: '_buildCalendar',\n        value: function _buildCalendar(days, depth) {\n\n            // Call the correct organization method based on the nesting depth\n            if (depth === 'month') {\n\n                this.bcCollection = this.bcCalendarService.organizeMonths(days);\n            } else if (depth === 'week') {\n\n                this.bcCollection = this.bcCalendarService.organizeWeeks(days);\n            } else if (depth === 'day') {\n\n                this.bcCollection = days;\n            }\n        }\n\n        /**\n         * Check to see if the day is prior to the current date\n         * This is used to disable the unselectable days\n         *\n         * @param {Date} date\n         * @return {Bool}\n         */\n\n    }, {\n        key: 'isBeforeToday',\n        value: function isBeforeToday(date) {\n            return this.bcCalendarService.dateIsBeforeToday(date);\n        }\n\n        /**\n         * Check to see if the day matches the current date\n         *\n         * @param {Date} date\n         * @return {Bool}\n         */\n\n    }, {\n        key: 'isDayToday',\n        value: function isDayToday(date) {\n            return this.bcCalendarService.isDayToday(date, this.startDate);\n        }\n\n        /**\n         * Select a date\n         *\n         * @param {Object} day\n         */\n\n    }, {\n        key: 'selectDate',\n        value: function selectDate(day) {\n\n            // Set the selected day\n            this.selectedDate = day;\n\n            // Only call the passed method if it exists and a valid date was chosen\n            if (day.date && this.bcDateSelected) {\n                this.bcDateSelected({\n                    date: day.date\n                });\n            }\n        }\n\n        /**\n         * Build an array of days\n         *\n         * @param {Integer} limit - how many days to create\n         * @param {Date} start - the starting date\n         * @return {Array} days\n         */\n\n    }, {\n        key: '_buildDays',\n        value: function _buildDays(limit, start) {\n            var counter = 0;\n            var days = [];\n            var day = void 0;\n\n            while (counter < limit) {\n                // Create the day\n                day = moment(start).add(counter, 'days').toISOString();\n\n                // Add to the array\n                days.push({\n                    date: day\n                });\n\n                // Increment the counter\n                counter = counter + 1;\n            }\n\n            return days;\n        }\n    }]);\n\n    return CalendarController;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.controller.js\n **/","export class CalendarController {\n\n    constructor(\n        $templateCache,\n        bcCalendarConfig, bcCalendarService\n    ) {\n        'ngInject';\n\n        this.$templateCache = $templateCache;\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n\n        this._activate();\n\n    }\n\n\n\n\n    _activate() {\n        // Define today's date\n        this.today = moment(new Date()).startOf('day');\n\n        // Define the start date for the calendar\n        this.startDate = this.bcStartDate || this.bcCalendarConfig.startDate;\n\n        // If the end date was defined\n        if (this.bcEndDate) {\n\n            // Define how many days are needed using the end date\n            this.days = this.bcCalendarService.durationInDays(this.startDate, this.bcEndDate);\n\n        } else {\n\n            // Define how many days are needed from the count passed in or the config\n            this.days = parseInt(this.bcDays || this.bcCalendarConfig.days, 10);\n\n        }\n\n        // Define how deep to organize the calendar\n        this.nestingDepth = this.bcNestingDepth || this.bcCalendarConfig.nestingDepth;\n\n        // Define the weekday headers format\n        this.weekdays = this.bcWeekTitleFormat ?\n            this.bcCalendarConfig.weekdayStyle[this.bcWeekTitleFormat] :\n            this.bcCalendarConfig.weekdayStyle[this.bcCalendarConfig.weekTitleFormat];\n\n        // Build array of days\n        const days = this._buildDays(this.days, this.startDate);\n\n        // Build the calendar JSON and expose to the DOM\n        this._buildCalendar(days, this.nestingDepth);\n\n        // Initially no date is selected\n        this.selectedDate = null;\n\n        // Set the visibility of the calendar header\n        this.showHeader = typeof(this.bcShowHeader) === 'boolean' ?\n            this.bcShowHeader : this.bcCalendarConfig.showHeader;\n\n        // Define the template for an individual day\n        // If the user defined a template on the directive\n        if (this.bcDayTemplate) {\n            // If the user defined a template in the provider\n            const templateLocation = 'userDayTemplate.html';\n\n            // Put the user template into the cache\n            this.$templateCache.put(templateLocation, this.bcDayTemplate);\n\n            // Expose the location to the directive\n            this.dayTemplate = templateLocation;\n\n        } else if (this.bcCalendarConfig.userDayTemplate) {\n\n            // If the user defined a template in the provider\n            const templateLocation = 'userDayTemplate.html';\n\n            // Put the user template into the cache\n            this.$templateCache.put(templateLocation, this.bcCalendarConfig.userDayTemplate);\n\n            // Expose the location to the directive\n            this.dayTemplate = templateLocation;\n\n        } else {\n            // no template from the user\n\n            // Expose the default template location to the directive\n            this.dayTemplate = this.bcCalendarConfig.dayTemplate;\n\n        }\n\n    }\n\n\n\n\n    /**\n     * Build the calendar JSON\n     *\n     * @param {Array} days\n     * @param {String} depth\n     * @return {Element} element\n     */\n    _buildCalendar(days, depth) {\n\n        // Call the correct organization method based on the nesting depth\n        if (depth === 'month') {\n\n            this.bcCollection = this.bcCalendarService.organizeMonths(days);\n\n        } else if (depth === 'week') {\n\n            this.bcCollection = this.bcCalendarService.organizeWeeks(days);\n\n        } else if (depth === 'day') {\n\n            this.bcCollection = days;\n\n        }\n\n    }\n\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     *\n     * @param {Date} date\n     * @return {Bool}\n     */\n    isBeforeToday(date) {\n        return this.bcCalendarService.dateIsBeforeToday(date);\n    }\n\n\n    /**\n     * Check to see if the day matches the current date\n     *\n     * @param {Date} date\n     * @return {Bool}\n     */\n    isDayToday(date) {\n        return this.bcCalendarService.isDayToday(date, this.startDate);\n    }\n\n\n    /**\n     * Select a date\n     *\n     * @param {Object} day\n     */\n    selectDate(day) {\n\n        // Set the selected day\n        this.selectedDate = day;\n\n        // Only call the passed method if it exists and a valid date was chosen\n        if (day.date && this.bcDateSelected) {\n            this.bcDateSelected({\n                date: day.date,\n            });\n        }\n\n    }\n\n\n    /**\n     * Build an array of days\n     *\n     * @param {Integer} limit - how many days to create\n     * @param {Date} start - the starting date\n     * @return {Array} days\n     */\n    _buildDays(limit, start) {\n        let counter = 0;\n        const days = [];\n        let day;\n\n        while (counter < limit) {\n            // Create the day\n            day = moment(start).add(counter, 'days').toISOString();\n\n            // Add to the array\n            days.push({\n                date: day,\n            });\n\n            // Increment the counter\n            counter = counter + 1;\n        }\n\n        return days;\n    }\n\n\n\n\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.controller.js\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/calendar.html';\nvar html = \"<section class=bc-calendar> <header class=bc-calendar__header data-ng-if=vm.showHeader> <span class=\\\"bc-calendar__day bc-calendar__day--header\\\" data-ng-repeat=\\\"day in vm.weekdays track by $index\\\"> <strong class=bc-calendar__day-title> {{ day }} </strong> </span> </header> <div data-ng-include=vm.getTemplateUrl()></div> </section>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/calendar.html\n ** module id = 6\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/year.html';\nvar html = \"<div class=bc-calendar__year data-ng-repeat=\\\"year in vm.bcCollection track by $index\\\"> <bc-month bc-collection=year></bc-month> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/year.html\n ** module id = 7\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/month.html';\nvar html = \"<div class=bc-calendar__month data-ng-repeat=\\\"month in vm.bcCollection track by $index\\\"> <bc-week bc-collection=month></bc-week> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/month.html\n ** module id = 8\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/week.html';\nvar html = \"<div class=bc-calendar__week data-ng-repeat=\\\"week in vm.bcCollection track by $index\\\"> <bc-day bc-collection=week></bc-day> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/week.html\n ** module id = 9\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/day.html';\nvar html = \"<span class=bc-calendar__day data-ng-class=\\\"{ 'bc-calendar__day--disabled': vm.isBeforeToday(day.date),\\n                   'bc-calendar__day--today': vm.isDayToday(day.date),\\n                   'bc-calendar__day--even': $even,\\n                   'bc-calendar__day--pad': !day.date,\\n                   'bc-calendar__day--selected': day.date === vm.selectedDate.date }\\\" data-ng-click=vm.selectDate(day) data-ng-repeat=\\\"day in vm.bcCollection track by $index\\\"> <ng-include src=vm.dayTemplate></ng-include> </span>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/day.html\n ** module id = 10\n ** module chunks = 0 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcMonthDirective = bcMonthDirective;\n\nvar _month = require('./templates/month.html');\n\nvar _month2 = _interopRequireDefault(_month);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcMonthDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '='\n        },\n        templateUrl: _month2.default,\n        controller: function controller() {},\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/month.directive.js\n **/","import monthTemplate from './templates/month.html';\n\nexport function bcMonthDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '=',\n        },\n        templateUrl: monthTemplate,\n        controller: () => {},\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/month.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcWeekDirective = bcWeekDirective;\n\nvar _week = require('./templates/week.html');\n\nvar _week2 = _interopRequireDefault(_week);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcWeekDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '='\n        },\n        templateUrl: _week2.default,\n        controller: function controller() {},\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/week.directive.js\n **/","import weekTemplate from './templates/week.html';\n\nexport function bcWeekDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '=',\n        },\n        templateUrl: weekTemplate,\n        controller: () => {},\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/week.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcDayDirective = bcDayDirective;\n\nvar _day = require('./templates/day.html');\n\nvar _day2 = _interopRequireDefault(_day);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcDayDirective(bcCalendarConfig) {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '='\n        },\n        templateUrl: _day2.default,\n        controller: function controller() {},\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/day.directive.js\n **/","import dayWrapperTemplate from './templates/day.html';\n\nexport function bcDayDirective(\n    bcCalendarConfig\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '=',\n        },\n        templateUrl: dayWrapperTemplate,\n        controller: () => {},\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/day.directive.js\n **/"],"sourceRoot":""}