{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-json-calendar.min.js","webpack:///webpack/bootstrap 985082504cba317f73da?b288","webpack:///./src/index.js?1f39","webpack:///./src/calendar.service.js?8728"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","_calendar","angular","service","CalendarService","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","month","year","date","Date","days","getMonth","push","moment","hour","minute","second","format","setDate","getDate","count"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,2BAAAH,GACA,gBAAAC,SACAA,QAAA,yBAAAD,IAEAD,EAAA,yBAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YAEAS,QAAOC,eAAehB,EAAS,cAC3BiB,OAAO,GE3DZ,IAAAC,GAAAZ,EAAA,EFgECN,cE9DcmB,QAAQlB,OAAO,sBACzBmB,QAAQ,kBADEF,EAAAG,kBFkET,SAASpB,EAAQD,GAEtB,YAQA,SAASsB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHV,OAAOC,eAAehB,EAAS,cAC7BiB,OAAO,GAGT,IAAIS,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMpB,OAAOC,eAAeY,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUR,EAAaa,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBH,EAAYe,UAAWF,GAAiBC,GAAaX,EAAiBH,EAAac,GAAqBd,KG5EphBxB,GAAAqB,gBAAA,WAET,QAFSA,KAIL,UHgFHC,GAAgBlB,KGpFRiB,GHoOV,MArCAK,GG/LUL,IHgMRe,IAAK,iBACLnB,MAAO,SGpEOuB,EAAOC,GAKlB,IAHA,GAAMC,GAAO,GAAIC,MAAKF,EAAMD,EAAO,GAC7BI,KAECF,EAAKG,aAAeL,GACvBI,EAAKE,KAAKC,OAAOL,GAAMM,KAAK,GAAGC,OAAO,GAAGC,OAAO,GAAGC,UACnDT,EAAKU,QAAQV,EAAKW,UAAY,EAGlC,OAAOT,MH+EVR,IAAK,kBACLnB,MAAO,SGrEQqC,GAEZ,GAAIxB,GAAA,OACEc,IAEN,KAAKd,EAAI,EAAOwB,EAAJxB,EAAWA,GAAK,EACxBc,EAAKE,KAAKhB,EAGd,OAAOc,OA3JFvB","file":"angular-json-calendar.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _calendar = __webpack_require__(1);\n\t\n\texports.default = angular.module('bc.JsonCalendar', []).service('CalendarService', _calendar.CalendarService);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CalendarService = exports.CalendarService = function () {\n\t  function CalendarService() {\n\t    'ngInject';\n\t\n\t    _classCallCheck(this, CalendarService);\n\t  }\n\t\n\t  /**\n\t   * Test if days match\n\t   *\n\t   * @param {Date} date1\n\t   * @param {Date} date2\n\t   * @return {Bool} match\n\t   */\n\t  /*\n\t   *    daysMatch(date1, date2) {\n\t   *\n\t   *        let match = false;\n\t   *        const day1 = moment(date1).date();\n\t   *        const day2 = moment(date2).date();\n\t   *\n\t   *        if (day1 === day2) {\n\t   *            match = true;\n\t   *        }\n\t   *\n\t   *        return match;\n\t   *\n\t   *    }\n\t   */\n\t\n\t  /**\n\t   * Test if months match\n\t   *\n\t   * @param {Date} date1\n\t   * @param {Date} date2\n\t   * @return {Bool} match\n\t   */\n\t  /*\n\t   *    monthsMatch(date1, date2) {\n\t   *\n\t   *        let match = false;\n\t   *        const month1 = moment(date1).month();\n\t   *        const month2 = moment(date2).month();\n\t   *\n\t   *        if (month1 === month2) {\n\t   *            match = true;\n\t   *        }\n\t   *\n\t   *        return match;\n\t   *\n\t   *    }\n\t   */\n\t\n\t  /**\n\t   * Test if day is today\n\t   *\n\t   * @param {Date} date - The date to check\n\t   * @param {Date} today - The day to check against\n\t   * @return {Bool} isToday\n\t   */\n\t  /*\n\t   *    isToday(date, today) {\n\t   *\n\t   *        today = moment(today).startOf('day');\n\t   *\n\t   *        const dayToTest = moment(date).startOf('day');\n\t   *        const isToday = today.diff(dayToTest) ? false : true;\n\t   *\n\t   *        return isToday;\n\t   *\n\t   *    }\n\t   */\n\t\n\t  /**\n\t   * Update the date with the current time\n\t   *\n\t   * @param {Date} date\n\t   * @return {Date} updatedDate\n\t   */\n\t  /*\n\t   *    updateTime(date) {\n\t   *\n\t   *        let updatedDate;\n\t   *\n\t   *        // Get the current date\n\t   *        const jsDate = new Date().toISOString();\n\t   *        const currentHour = moment(jsDate).hour();\n\t   *        const currentMinutes = moment(jsDate).minutes();\n\t   *\n\t   *        // Zero out seconds and milliseconds\n\t   *        updatedDate = moment(date).set({\n\t   *            hour: currentHour,\n\t   *            minutes: currentMinutes,\n\t   *            second: 0,\n\t   *            millisecond: 0,\n\t   *        }).format();\n\t   *\n\t   *        return updatedDate;\n\t   *\n\t   *    }\n\t   */\n\t\n\t  /**\n\t   * Return an array of days for the passed in month\n\t   *\n\t   * @param {Integer} month\n\t   * @param {Integer} year\n\t   * @return {Array} days\n\t   */\n\t\n\t\n\t  _createClass(CalendarService, [{\n\t    key: 'getDaysInMonth',\n\t    value: function getDaysInMonth(month, year) {\n\t\n\t      var date = new Date(year, month, 1);\n\t      var days = [];\n\t\n\t      while (date.getMonth() === month) {\n\t        days.push(moment(date).hour(0).minute(0).second(0).format());\n\t        date.setDate(date.getDate() + 1);\n\t      }\n\t\n\t      return days;\n\t    }\n\t\n\t    /**\n\t     * Turn a count (e.g. '6') into an array: '[1,2,3,4,5,6]'\n\t     *\n\t     * @param {Integer} count\n\t     * @return {Array} days\n\t     */\n\t\n\t  }, {\n\t    key: 'createDaysArray',\n\t    value: function createDaysArray(count) {\n\t\n\t      var i = void 0;\n\t      var days = [];\n\t\n\t      for (i = 0; i < count; i += 1) {\n\t        days.push(i);\n\t      }\n\t\n\t      return days;\n\t    }\n\t  }]);\n\t\n\t  return CalendarService;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-json-calendar.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 985082504cba317f73da\n **/","import { CalendarService } from './calendar.service';\n\nexport default angular.module('bc.JsonCalendar', [])\n    .service('CalendarService', CalendarService)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","export class CalendarService {\n\n    constructor(\n    ) {\n        'ngInject';\n\n    }\n\n\n\n\n    /**\n     * Test if days match\n     *\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Bool} match\n     */\n    /*\n     *    daysMatch(date1, date2) {\n     *\n     *        let match = false;\n     *        const day1 = moment(date1).date();\n     *        const day2 = moment(date2).date();\n     *\n     *        if (day1 === day2) {\n     *            match = true;\n     *        }\n     *\n     *        return match;\n     *\n     *    }\n     */\n\n\n    /**\n     * Test if months match\n     *\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Bool} match\n     */\n    /*\n     *    monthsMatch(date1, date2) {\n     *\n     *        let match = false;\n     *        const month1 = moment(date1).month();\n     *        const month2 = moment(date2).month();\n     *\n     *        if (month1 === month2) {\n     *            match = true;\n     *        }\n     *\n     *        return match;\n     *\n     *    }\n     */\n\n\n    /**\n     * Test if day is today\n     *\n     * @param {Date} date - The date to check\n     * @param {Date} today - The day to check against\n     * @return {Bool} isToday\n     */\n    /*\n     *    isToday(date, today) {\n     *\n     *        today = moment(today).startOf('day');\n     *\n     *        const dayToTest = moment(date).startOf('day');\n     *        const isToday = today.diff(dayToTest) ? false : true;\n     *\n     *        return isToday;\n     *\n     *    }\n     */\n\n\n    /**\n     * Update the date with the current time\n     *\n     * @param {Date} date\n     * @return {Date} updatedDate\n     */\n    /*\n     *    updateTime(date) {\n     *\n     *        let updatedDate;\n     *\n     *        // Get the current date\n     *        const jsDate = new Date().toISOString();\n     *        const currentHour = moment(jsDate).hour();\n     *        const currentMinutes = moment(jsDate).minutes();\n     *\n     *        // Zero out seconds and milliseconds\n     *        updatedDate = moment(date).set({\n     *            hour: currentHour,\n     *            minutes: currentMinutes,\n     *            second: 0,\n     *            millisecond: 0,\n     *        }).format();\n     *\n     *        return updatedDate;\n     *\n     *    }\n     */\n\n\n\n\n\n\n\n\n\n\n    /**\n     * Return an array of days for the passed in month\n     *\n     * @param {Integer} month\n     * @param {Integer} year\n     * @return {Array} days\n     */\n    getDaysInMonth(month, year) {\n\n        const date = new Date(year, month, 1);\n        const days = [];\n\n        while (date.getMonth() === month) {\n            days.push(moment(date).hour(0).minute(0).second(0).format());\n            date.setDate(date.getDate() + 1);\n        }\n\n        return days;\n\n    }\n\n\n    /**\n     * Turn a count (e.g. '6') into an array: '[1,2,3,4,5,6]'\n     *\n     * @param {Integer} count\n     * @return {Array} days\n     */\n    createDaysArray(count) {\n\n        let i;\n        const days = [];\n\n        for (i = 0; i < count; i += 1) {\n            days.push(i);\n        }\n\n        return days;\n\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.service.js\n **/"],"sourceRoot":""}