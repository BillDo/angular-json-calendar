{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2fa5552fda0febcdbf5c","webpack:///./src/index.js","webpack:///./src/index.js?1f39","webpack:///./src/calendar.provider.js","webpack:///./src/calendar.provider.js?b2f7","webpack:///./src/calendar.service.js","webpack:///./src/calendar.service.js?8728","webpack:///./src/calendar.directive.js","webpack:///./src/calendar.directive.js?d4aa","webpack:///./src/calendar.controller.js","webpack:///./src/calendar.controller.js?6b53","webpack:///./src/templates/calendar.html","webpack:///./src/templates/year.html","webpack:///./src/templates/month.html","webpack:///./src/templates/week.html","webpack:///./src/templates/day.html","webpack:///./src/month.directive.js","webpack:///./src/month.directive.js?369b","webpack:///./src/week.directive.js","webpack:///./src/week.directive.js?2d44","webpack:///./src/day.directive.js","webpack:///./src/day.directive.js?de60"],"names":[],"mappings":"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","file":"angular-json-calendar.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2fa5552fda0febcdbf5c\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _calendar = require('./calendar.provider');\n\nvar _calendar2 = require('./calendar.service');\n\nvar _calendar3 = require('./calendar.directive');\n\nvar _month = require('./month.directive');\n\nvar _week = require('./week.directive');\n\nvar _day = require('./day.directive');\n\nexports.default = angular.module('bc.JsonCalendar', []).provider('bcCalendarConfig', _calendar.bcCalendarConfig).service('bcCalendarService', _calendar2.bcCalendarService).directive('bcCalendar', _calendar3.bcCalendarDirective).directive('bcMonth', _month.bcMonthDirective).directive('bcWeek', _week.bcWeekDirective).directive('bcDay', _day.bcDayDirective);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { bcCalendarConfig } from './calendar.provider';\nimport { bcCalendarService } from './calendar.service';\nimport { bcCalendarDirective } from './calendar.directive';\nimport { bcMonthDirective } from './month.directive';\nimport { bcWeekDirective } from './week.directive';\nimport { bcDayDirective } from './day.directive';\n\nexport default angular.module('bc.JsonCalendar', [])\n    .provider('bcCalendarConfig', bcCalendarConfig)\n    .service('bcCalendarService', bcCalendarService)\n    .directive('bcCalendar', bcCalendarDirective)\n    .directive('bcMonth', bcMonthDirective)\n    .directive('bcWeek', bcWeekDirective)\n    .directive('bcDay', bcDayDirective)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarConfig = exports.bcCalendarConfig = function () {\n\n    // Define defaults\n\n    function bcCalendarConfig() {\n        _classCallCheck(this, bcCalendarConfig);\n\n        // The calendar will begin with today\n        this.startDate = moment(new Date().toISOString()).startOf('day');\n\n        // The default interval type [day|week|month]\n        this.nestingDepth = 'month';\n\n        // How many days should be generated\n        this.days = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdayStyle = {\n            letter: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n            abbreviation: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n            word: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Satday']\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.weekTitleFormat = 'abbreviation';\n\n        // Should days be organized by week?\n        this.organizeWeeks = true;\n    }\n\n    _createClass(bcCalendarConfig, [{\n        key: '$get',\n        value: function $get() {\n            return this;\n        }\n    }]);\n\n    return bcCalendarConfig;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.provider.js\n **/","export class bcCalendarConfig {\n\n    // Define defaults\n    constructor() {\n\n        // The calendar will begin with today\n        this.startDate = moment(new Date().toISOString()).startOf('day');\n\n        // The default interval type [day|week|month]\n        this.nestingDepth = 'month';\n\n        // How many days should be generated\n        this.days = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdayStyle = {\n            letter: [\n                'S',\n                'M',\n                'T',\n                'W',\n                'T',\n                'F',\n                'S',\n            ],\n            abbreviation: [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thur',\n                'Fri',\n                'Sat',\n            ],\n            word: [\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Satday',\n            ],\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.weekTitleFormat = 'abbreviation';\n\n        // Should days be organized by week?\n        this.organizeWeeks = true;\n\n    }\n\n\n\n\n    $get() {\n        return this;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.provider.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarService = exports.bcCalendarService = function () {\n    function bcCalendarService() {\n        'ngInject';\n\n        _classCallCheck(this, bcCalendarService);\n    }\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n\n\n    _createClass(bcCalendarService, [{\n        key: 'dateIsBeforeToday',\n        value: function dateIsBeforeToday(date) {\n            return moment(date).isBefore(this.startDate);\n        }\n\n        /**\n         * Turn a integer (e.g. '6') into an array: '[1,2,3,4,5,6]'\n         *\n         * @param {Integer} count\n         * @return {Array} days\n         */\n\n    }, {\n        key: 'integerToArray',\n        value: function integerToArray(count) {\n            var i = void 0;\n            var days = [];\n\n            for (i = 0; i < count; i += 1) {\n                days.push(i);\n            }\n\n            return days;\n        }\n\n        /**\n         * Pad the beginning of a week\n         *\n         * @param {String} startDate - date to to work back from\n         * @param {Array} count - how many days to pad\n         * @return {Array} pad\n         */\n\n    }, {\n        key: 'padDaysLeft',\n        value: function padDaysLeft(startDate, count) {\n            var pad = [];\n            var missingDays = this.integerToArray(count);\n\n            // Loop through missing days\n            for (var day in missingDays) {\n                // How many days to go back\n                var subtraction = parseInt(day, 10) + 1;\n\n                // Find that day\n                var previous = moment(startDate).subtract(subtraction, 'days').toISOString();\n\n                // Add to the beginning of the array\n                pad.unshift({\n                    date: previous\n                });\n            }\n\n            return pad;\n        }\n\n        /**\n         * Pad a collection with blank tiles at the beginning\n         *\n         * @param {Array} collection\n         * @param {Integer} count\n         * @return {Array} paddedCollection\n         */\n\n    }, {\n        key: 'padBlankTiles',\n        value: function padBlankTiles(collection, count) {\n            var direction = arguments.length <= 2 || arguments[2] === undefined ? 'left' : arguments[2];\n\n            var i = void 0;\n            var days = [];\n\n            // Create array\n            for (i = 0; i < count; i += 1) {\n                days.push({\n                    date: null\n                });\n            }\n\n            // If direction is 'right'\n            if (direction === 'right') {\n                // pad the end\n                return collection.concat(days);\n            } else if (direction === 'left') {\n                // otherwise pad the beginning\n                return days.concat(collection);\n            }\n        }\n    }]);\n\n    return bcCalendarService;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.service.js\n **/","export class bcCalendarService {\n\n    constructor(\n    ) {\n        'ngInject';\n\n    }\n\n\n\n\n\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n    dateIsBeforeToday(date) {\n        return moment(date).isBefore(this.startDate);\n    }\n\n\n\n\n\n    /**\n     * Turn a integer (e.g. '6') into an array: '[1,2,3,4,5,6]'\n     *\n     * @param {Integer} count\n     * @return {Array} days\n     */\n    integerToArray(count) {\n        let i;\n        const days = [];\n\n        for (i = 0; i < count; i += 1) {\n            days.push(i);\n        }\n\n        return days;\n    }\n\n\n    /**\n     * Pad the beginning of a week\n     *\n     * @param {String} startDate - date to to work back from\n     * @param {Array} count - how many days to pad\n     * @return {Array} pad\n     */\n    padDaysLeft(startDate, count) {\n        const pad = [];\n        const missingDays = this.integerToArray(count);\n\n        // Loop through missing days\n        for (const day in missingDays) {\n            // How many days to go back\n            const subtraction = parseInt(day, 10) + 1;\n\n            // Find that day\n            const previous = moment(startDate).subtract((subtraction), 'days').toISOString();\n\n            // Add to the beginning of the array\n            pad.unshift({\n                date: previous,\n            });\n        }\n\n        return pad;\n    }\n\n\n    /**\n     * Pad a collection with blank tiles at the beginning\n     *\n     * @param {Array} collection\n     * @param {Integer} count\n     * @return {Array} paddedCollection\n     */\n    padBlankTiles(collection, count, direction = 'left') {\n        let i;\n        const days = [];\n\n        // Create array\n        for (i = 0; i < count; i += 1) {\n            days.push({\n                date: null,\n            });\n        }\n\n        // If direction is 'right'\n        if (direction === 'right') {\n            // pad the end\n            return collection.concat(days);\n        } else if (direction === 'left') {\n            // otherwise pad the beginning\n            return days.concat(collection);\n        }\n\n    }\n\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.service.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcCalendarDirective = bcCalendarDirective;\n\nvar _calendar = require('./calendar.controller');\n\nvar _calendar2 = require('./templates/calendar.html');\n\nvar _calendar3 = _interopRequireDefault(_calendar2);\n\nvar _year = require('./templates/year.html');\n\nvar _year2 = _interopRequireDefault(_year);\n\nvar _month = require('./templates/month.html');\n\nvar _month2 = _interopRequireDefault(_month);\n\nvar _week = require('./templates/week.html');\n\nvar _week2 = _interopRequireDefault(_week);\n\nvar _day = require('./templates/day.html');\n\nvar _day2 = _interopRequireDefault(_day);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcCalendarDirective($compile) {\n    'ngInject';\n\n    // Define possible templates\n\n    var templates = {\n        year: _year2.default,\n        month: _month2.default,\n        week: _week2.default,\n        day: _day2.default\n    };\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?', // date - default to today\n            bcNestingDepth: '@?', // string [month|week|day] - defaults: month\n            bcDays: '@?', // integer - default to 1\n            bcWeekTitleFormat: '@?', // string [word|abbreviation|letter] - default: abbreviation\n            bcDateSelected: '&' },\n        // function will be called when a date is selected (tap/click)\n        link: linkFunction,\n        templateUrl: _calendar3.default,\n        controller: _calendar.CalendarController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {\n\n        // Set the correct template based on the desired nesting depth\n        vm.getTemplateUrl = function () {\n            return templates[vm.nestingDepth];\n        };\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.directive.js\n **/","import { CalendarController } from './calendar.controller';\nimport calendarTemplate from './templates/calendar.html';\nimport yearTemplate from './templates/year.html';\nimport monthTemplate from './templates/month.html';\nimport weekTemplate from './templates/week.html';\nimport dayTemplate from './templates/day.html';\n\n\nexport function bcCalendarDirective(\n    $compile\n) {\n    'ngInject';\n\n    // Define possible templates\n    const templates = {\n        year: yearTemplate,\n        month: monthTemplate,\n        week: weekTemplate,\n        day: dayTemplate,\n    };\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?', // date - default to today\n            bcNestingDepth: '@?', // string [month|week|day] - defaults: month\n            bcDays: '@?', // integer - default to 1\n            bcWeekTitleFormat: '@?', // string [word|abbreviation|letter] - default: abbreviation\n            bcDateSelected: '&', // function will be called when a date is selected (tap/click)\n        },\n        link: linkFunction,\n        templateUrl: calendarTemplate,\n        controller: CalendarController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n\n\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {\n\n        // Set the correct template based on the desired nesting depth\n        vm.getTemplateUrl = () => {\n            return templates[vm.nestingDepth];\n        };\n\n    }\n\n\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CalendarController = exports.CalendarController = function () {\n    function CalendarController(bcCalendarConfig, bcCalendarService) {\n        'ngInject';\n\n        _classCallCheck(this, CalendarController);\n\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n        this._activate();\n    }\n\n    _createClass(CalendarController, [{\n        key: '_activate',\n        value: function _activate() {\n            // Define today's date\n            this.today = this.bcCalendarConfig.startDate;\n\n            // DEFAULTS\n            this.startDate = this.startDate || this.bcCalendarConfig.startDate;\n            this.days = parseInt(this.bcCount || this.bcCalendarConfig.days, 10);\n            this.nestingDepth = this.bcNestingDepth || this.bcCalendarConfig.nestingDepth;\n            this.weekdays = this.bcWeekTitleFormat ? this.bcCalendarConfig.weekdayStyle[this.bcWeekTitleFormat] : this.bcCalendarConfig.weekdayStyle[this.bcCalendarConfig.weekTitleFormat];\n            this.WEEK_LENGTH = 7;\n\n            // Define the calendar duration (or length)\n            this.calendarDuration = moment.duration(this.days, this.bcCalendarConfig.interval);\n\n            // Get the full count of days\n            this.calendarDays = this.calendarDuration.asDays();\n\n            // Get the current day of the month\n            this.todayDayOfMonth = moment(this.startDate).date();\n\n            // Get the current weekday\n            this.todayDayOfWeek = moment(this.startDate).day();\n\n            // Initially nothing is selected\n            this.selectedDate = null;\n\n            var JS_DATE = {\n                year: 2016,\n                month: 3,\n                day: 11\n            };\n\n            var needed = 100;\n            var tempDays = this._buildDays(needed, new Date(JS_DATE.year, JS_DATE.month, JS_DATE.day).toISOString());\n\n            /*\n             *console.log('tempDays: ', tempDays);\n             */\n\n            this.bcCollection = this._organizeMonths(tempDays);\n\n            console.log('this.bcCollection: ', this.bcCollection);\n\n            /*\n             *console.log('tempMonths: ', tempMonths);\n             */\n\n            // Build the calendar JSON\n            /*\n             *this.calendar = this.build(this.startDate, 2);\n             */\n\n            //\n            // Call the correct organization method based on the nesting depth\n            //\n            if (this.nestingDepth === 'month') {\n                this.bcCollection = this._organizeMonths(tempDays);\n            } else if (this.nestingDepth === 'week') {\n                this.bcCollection = this._organizeWeeks(tempDays);\n            } else if (this.nestingDepth === 'day') {\n                this.bcCollection = tempDays;\n            }\n        }\n\n        /**\n         * Check to see if the day is prior to the current date\n         * This is used to disable the unselectable days\n         *\n         * @param {Date} day\n         * @return {Bool}\n         */\n\n    }, {\n        key: 'isBeforeToday',\n        value: function isBeforeToday(date) {\n            return this.bcCalendarService.dateIsBeforeToday(date);\n        }\n\n        /**\n         * Check to see if the day matches the current date\n         *\n         * @param {Date} day\n         * @return {Bool}\n         */\n\n    }, {\n        key: 'isDayToday',\n        value: function isDayToday(date) {\n            return moment(date).isSame(this.startDate);\n        }\n\n        /**\n         * Select a date\n         *\n         * @param {Object} day\n         */\n\n    }, {\n        key: 'selectDate',\n        value: function selectDate(day) {\n\n            // Set the selected day\n            this.selectedDate = day;\n\n            // Only call the passed method if it exists and a valid date was chosen\n            if (day.date && this.bcDateSelected) {\n                this.bcDateSelected({\n                    date: day.date\n                });\n            }\n        }\n    }, {\n        key: '_buildDays',\n        value: function _buildDays(limit, start) {\n            var counter = 0;\n            var days = [];\n            var day = void 0;\n\n            while (counter < limit) {\n                // Create the day\n                day = moment(start).add(counter, 'days').toISOString();\n\n                // Add to the array\n                days.push({\n                    date: day\n                });\n\n                // Increment our counter\n                counter = counter + 1;\n            }\n\n            /*\n             *console.warn('build days: ', limit, start, days);\n             */\n\n            return days;\n        }\n\n        /**\n         * Organize by month\n         *\n         * @param {Array} allDays - An array of all days\n         * @return {Array} collection - days organized into weeks and months\n         */\n\n    }, {\n        key: '_organizeMonths',\n        value: function _organizeMonths(allDays) {\n            var calendar = [];\n            var SATURDAY = 6;\n            var SUNDAY = 0;\n            var collection = allDays;\n            var month = void 0;\n            var dayOfMonth = moment(collection[0].date).date();\n            var daysInMonth = moment(collection[0].date).daysInMonth();\n\n            // Pad the beginning of the month with any missing days\n            // If the first day is not the first day of the month\n            if (moment(collection[0].date).date() > 0) {\n                // Pull this month's days from the collection\n                month = collection.slice(0, daysInMonth - (dayOfMonth - 1));\n\n                // Fill the missing days from the month\n                var pad = this.bcCalendarService.padDaysLeft(month[0].date, dayOfMonth - 1);\n\n                // Combine with the existing array\n                collection = pad.concat(collection);\n            }\n\n            // Split into months\n            // As long as there are days left in the collection\n            while (collection.length > 0) {\n\n                // Get the day of the month for the first date of the collection eg. '24'\n                dayOfMonth = moment(collection[0].date).date();\n\n                // Determine how many days there are this month (total)\n                daysInMonth = moment(collection[0].date).daysInMonth();\n\n                // Pull this month's days from the collection\n                month = collection.splice(0, daysInMonth - (dayOfMonth - 1));\n\n                // How many weekdays are prior to the first day of this month?\n                var firstDay = moment(month[0].date).day();\n\n                // If the first day is after Sunday\n                if (firstDay > SUNDAY) {\n                    // Pad with blank tiles so that the first day is lined up in the correct column\n                    month = this.bcCalendarService.padBlankTiles(month, firstDay, 'left');\n                }\n\n                // How many weekdays are after the last day of the month?\n                // (remember: weeks are zero-based)\n                var lastDay = moment(month[month.length - 1].date).day();\n\n                // If blank tiles are needed for the last week\n                if (lastDay < SATURDAY) {\n                    // Pad with blank tiles so that the first day is lined up in the correct column\n                    month = this.bcCalendarService.padBlankTiles(month, this.WEEK_LENGTH - (lastDay + 1), 'right');\n                }\n\n                // Organize into weeks and add to the calendar array\n                calendar.push(this._chunk(month));\n            }\n\n            return calendar;\n        }\n\n        /**\n         * Organize a collection of days into sub collections of weeks\n         *\n         * @param {Array} days - array of days\n         * @return {Array} collection\n         */\n\n    }, {\n        key: '_organizeWeeks',\n        value: function _organizeWeeks(days) {\n            // Determine the day of the week that the calendar starts and ends on\n            var firstDay = moment(days[0].date).day();\n            var lastDay = moment(days[days.length - 1].date).day();\n            var SATURDAY = 6;\n            var SUNDAY = 0;\n\n            // If the first day is after Sunday\n            if (firstDay > SUNDAY) {\n                // Pad with blank tiles so the first day is lined up in the correct weekday column\n                days = this.bcCalendarService.padBlankTiles(days, firstDay, 'left');\n            }\n\n            // If the last day is before Saturday\n            if (lastDay < SATURDAY) {\n                // Pad with blank tiles so that the last week's days are in the correct weekday column\n                days = this.bcCalendarService.padBlankTiles(days, this.WEEK_LENGTH - (lastDay + 1), 'right');\n            }\n\n            return this._chunk(days);\n        }\n\n        /**\n         * Split an array into chunks and return an array of these chunks\n         *\n         * @param {Array} group\n         * @param {Integer} groupsize - Chunk size. Defaults to 7 (one week).\n         * @return {Array} chunks\n         */\n\n    }, {\n        key: '_chunk',\n        value: function _chunk(group) {\n            var groupsize = arguments.length <= 1 || arguments[1] === undefined ? this.WEEK_LENGTH : arguments[1];\n\n            var sets = [];\n            var i = 0;\n            var chunks = group.length / parseInt(groupsize, 10);\n\n            while (i < chunks) {\n                sets[i] = group.splice(0, groupsize);\n                i = i + 1;\n            }\n\n            return sets;\n        }\n    }]);\n\n    return CalendarController;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.controller.js\n **/","export class CalendarController {\n\n    constructor(\n        bcCalendarConfig, bcCalendarService\n    ) {\n        'ngInject';\n\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n        this._activate();\n\n    }\n\n\n\n\n    _activate() {\n        // Define today's date\n        this.today = this.bcCalendarConfig.startDate;\n\n        // DEFAULTS\n        this.startDate = this.startDate || this.bcCalendarConfig.startDate;\n        this.days = parseInt(this.bcCount || this.bcCalendarConfig.days, 10);\n        this.nestingDepth = this.bcNestingDepth || this.bcCalendarConfig.nestingDepth;\n        this.weekdays = this.bcWeekTitleFormat ?\n            this.bcCalendarConfig.weekdayStyle[this.bcWeekTitleFormat] :\n            this.bcCalendarConfig.weekdayStyle[this.bcCalendarConfig.weekTitleFormat];\n        this.WEEK_LENGTH = 7;\n\n        // Define the calendar duration (or length)\n        this.calendarDuration =\n            moment.duration(this.days, this.bcCalendarConfig.interval);\n\n        // Get the full count of days\n        this.calendarDays = this.calendarDuration.asDays();\n\n\n        // Get the current day of the month\n        this.todayDayOfMonth = moment(this.startDate).date();\n\n        // Get the current weekday\n        this.todayDayOfWeek = moment(this.startDate).day();\n\n        // Initially nothing is selected\n        this.selectedDate = null;\n\n        const JS_DATE = {\n            year: 2016,\n            month: 3,\n            day: 11,\n        };\n\n        const needed = 100;\n        const tempDays = this._buildDays(needed,\n            new Date(JS_DATE.year, JS_DATE.month, JS_DATE.day).toISOString());\n\n        /*\n         *console.log('tempDays: ', tempDays);\n         */\n\n        this.bcCollection = this._organizeMonths(tempDays);\n\n\n        console.log('this.bcCollection: ', this.bcCollection);\n\n        /*\n         *console.log('tempMonths: ', tempMonths);\n         */\n\n        // Build the calendar JSON\n        /*\n         *this.calendar = this.build(this.startDate, 2);\n         */\n\n\n        //\n        // Call the correct organization method based on the nesting depth\n        //\n        if (this.nestingDepth === 'month') {\n            this.bcCollection = this._organizeMonths(tempDays);\n        } else if (this.nestingDepth === 'week') {\n            this.bcCollection = this._organizeWeeks(tempDays);\n        } else if (this.nestingDepth === 'day') {\n            this.bcCollection = tempDays;\n        }\n\n\n\n\n    }\n\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n    isBeforeToday(date) {\n        return this.bcCalendarService.dateIsBeforeToday(date);\n    }\n\n\n    /**\n     * Check to see if the day matches the current date\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n    isDayToday(date) {\n        return moment(date).isSame(this.startDate);\n    }\n\n\n    /**\n     * Select a date\n     *\n     * @param {Object} day\n     */\n    selectDate(day) {\n\n        // Set the selected day\n        this.selectedDate = day;\n\n        // Only call the passed method if it exists and a valid date was chosen\n        if (day.date && this.bcDateSelected) {\n            this.bcDateSelected({\n                date: day.date,\n            });\n        }\n\n    }\n\n\n    _buildDays(limit, start) {\n        let counter = 0;\n        const days = [];\n        let day;\n\n        while (counter < limit) {\n            // Create the day\n            day = moment(start).add(counter, 'days').toISOString();\n\n            // Add to the array\n            days.push({\n                date: day,\n            });\n\n            // Increment our counter\n            counter = counter + 1;\n        }\n\n        /*\n         *console.warn('build days: ', limit, start, days);\n         */\n\n        return days;\n    }\n\n\n    /**\n     * Organize by month\n     *\n     * @param {Array} allDays - An array of all days\n     * @return {Array} collection - days organized into weeks and months\n     */\n    _organizeMonths(allDays) {\n        const calendar = [];\n        const SATURDAY = 6;\n        const SUNDAY = 0;\n        let collection = allDays;\n        let month;\n        let dayOfMonth = moment(collection[0].date).date();\n        let daysInMonth = moment(collection[0].date).daysInMonth();\n\n        // Pad the beginning of the month with any missing days\n        // If the first day is not the first day of the month\n        if (moment(collection[0].date).date() > 0) {\n            // Pull this month's days from the collection\n            month = collection.slice(0, (daysInMonth - (dayOfMonth - 1)));\n\n            // Fill the missing days from the month\n            const pad = this.bcCalendarService.padDaysLeft(month[0].date, (dayOfMonth - 1));\n\n            // Combine with the existing array\n            collection = pad.concat(collection);\n        }\n\n\n        // Split into months\n        // As long as there are days left in the collection\n        while (collection.length > 0) {\n\n            // Get the day of the month for the first date of the collection eg. '24'\n            dayOfMonth = moment(collection[0].date).date();\n\n            // Determine how many days there are this month (total)\n            daysInMonth = moment(collection[0].date).daysInMonth();\n\n            // Pull this month's days from the collection\n            month = collection.splice(0, (daysInMonth - (dayOfMonth - 1)));\n\n            // How many weekdays are prior to the first day of this month?\n            const firstDay = moment(month[0].date).day();\n\n            // If the first day is after Sunday\n            if (firstDay > SUNDAY) {\n                // Pad with blank tiles so that the first day is lined up in the correct column\n                month = this.bcCalendarService.padBlankTiles(month, firstDay, 'left');\n            }\n\n            // How many weekdays are after the last day of the month?\n            // (remember: weeks are zero-based)\n            const lastDay = moment(month[month.length - 1].date).day();\n\n            // If blank tiles are needed for the last week\n            if (lastDay < SATURDAY) {\n                // Pad with blank tiles so that the first day is lined up in the correct column\n                month = this.bcCalendarService.padBlankTiles(month,\n                                                             this.WEEK_LENGTH - (lastDay + 1),\n                                                             'right');\n            }\n\n            // Organize into weeks and add to the calendar array\n            calendar.push(this._chunk(month));\n\n        }\n\n\n        return calendar;\n\n    }\n\n\n    /**\n     * Organize a collection of days into sub collections of weeks\n     *\n     * @param {Array} days - array of days\n     * @return {Array} collection\n     */\n    _organizeWeeks(days) {\n        // Determine the day of the week that the calendar starts and ends on\n        const firstDay = moment(days[0].date).day();\n        const lastDay = moment(days[days.length - 1].date).day();\n        const SATURDAY = 6;\n        const SUNDAY = 0;\n\n        // If the first day is after Sunday\n        if (firstDay > SUNDAY) {\n            // Pad with blank tiles so the first day is lined up in the correct weekday column\n            days = this.bcCalendarService.padBlankTiles(days, firstDay, 'left');\n        }\n\n        // If the last day is before Saturday\n        if (lastDay < SATURDAY) {\n            // Pad with blank tiles so that the last week's days are in the correct weekday column\n            days = this.bcCalendarService.padBlankTiles(days,this.WEEK_LENGTH - (lastDay + 1),\n                                                        'right');\n        }\n\n        return this._chunk(days);\n    }\n\n\n    /**\n     * Split an array into chunks and return an array of these chunks\n     *\n     * @param {Array} group\n     * @param {Integer} groupsize - Chunk size. Defaults to 7 (one week).\n     * @return {Array} chunks\n     */\n    _chunk(group, groupsize = this.WEEK_LENGTH) {\n        const sets = [];\n        let i = 0;\n        const chunks = group.length / parseInt(groupsize, 10);\n\n        while(i < chunks) {\n            sets[i] = group.splice(0, groupsize);\n            i = i + 1;\n        }\n\n        return sets;\n    }\n\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.controller.js\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/calendar.html';\nvar html = \"<section class=bc-calendar> <header class=bc-calendar__header> <span class=\\\"bc-calendar__day bc-calendar__day--header\\\" data-ng-repeat=\\\"day in vm.weekdays track by $index\\\"> <strong class=bc-calendar__day-title> {{ day }} </strong> </span> </header> <div data-ng-include=vm.getTemplateUrl()></div> </section>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/calendar.html\n ** module id = 5\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/year.html';\nvar html = \"<div class=bc-calendar__year data-ng-repeat=\\\"year in vm.bcCollection track by $index\\\"> <bc-month bc-collection=year></bc-month> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/year.html\n ** module id = 6\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/month.html';\nvar html = \"<div class=bc-calendar__month data-ng-repeat=\\\"month in vm.bcCollection track by $index\\\"> <bc-week bc-collection=month></bc-week> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/month.html\n ** module id = 7\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/week.html';\nvar html = \"<div class=bc-calendar__week data-ng-repeat=\\\"week in vm.bcCollection track by $index\\\"> <bc-day bc-collection=week></bc-day> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/week.html\n ** module id = 8\n ** module chunks = 0 1\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/templates/day.html';\nvar html = \"<span class=bc-calendar__day data-ng-class=\\\"{ 'bc-calendar__day--disabled': vm.isBeforeToday(day.date),\\n                   'bc-calendar__day--today': vm.isDayToday(day.date),\\n                   'bc-calendar__day--even': $even,\\n                   'bc-calendar__day--pad': !day.date,\\n                   'bc-calendar__day--selected': day.date === vm.selectedDate.date }\\\" data-ng-click=vm.selectDate(day) data-ng-repeat=\\\"day in vm.bcCollection track by $index\\\"> <time class=bc-calendar__day-time datetime=\\\"{{ day.date | date:'MMMM Do, YYYY' }}\\\" title=\\\"{{ day.date }}\\\" data-ng-if=\\\"day.date && day.date.length > 3\\\"> {{ day.date | date:'MM/dd/yy' }} <small> {{ day.date | date:'EEE' }} </small> </time> <span class=bc-calendar__day-time data-ng-if=!day.date></span> </span>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/templates/day.html\n ** module id = 9\n ** module chunks = 0 1\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcMonthDirective = bcMonthDirective;\n\nvar _month = require('./templates/month.html');\n\nvar _month2 = _interopRequireDefault(_month);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcMonthDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '='\n        },\n        templateUrl: _month2.default,\n        controller: function controller() {},\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/month.directive.js\n **/","import monthTemplate from './templates/month.html';\n\nexport function bcMonthDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '=',\n        },\n        templateUrl: monthTemplate,\n        controller: () => {},\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/month.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcWeekDirective = bcWeekDirective;\n\nvar _week = require('./templates/week.html');\n\nvar _week2 = _interopRequireDefault(_week);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcWeekDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '='\n        },\n        templateUrl: _week2.default,\n        controller: function controller() {},\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/week.directive.js\n **/","import weekTemplate from './templates/week.html';\n\nexport function bcWeekDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '=',\n        },\n        templateUrl: weekTemplate,\n        controller: () => {},\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/week.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcDayDirective = bcDayDirective;\n\nvar _day = require('./templates/day.html');\n\nvar _day2 = _interopRequireDefault(_day);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcDayDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '='\n        },\n        templateUrl: _day2.default,\n        controller: function controller() {},\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/day.directive.js\n **/","import dayTemplate from './templates/day.html';\n\nexport function bcDayDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcCollection: '=',\n        },\n        templateUrl: dayTemplate,\n        controller: () => {},\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/day.directive.js\n **/"],"sourceRoot":""}