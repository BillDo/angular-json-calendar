{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f76a0bc13ed6424a2e2f","webpack:///./src/index.js","webpack:///./src/index.js?1f39","webpack:///./src/calendar.provider.js","webpack:///./src/calendar.provider.js?b2f7","webpack:///./src/calendar.service.js","webpack:///./src/calendar.service.js?8728","webpack:///./src/calendar.directive.js","webpack:///./src/calendar.directive.js?d4aa","webpack:///./src/calendar.controller.js","webpack:///./src/calendar.controller.js?6b53","webpack:///./src/calendar.html"],"names":[],"mappings":"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","file":"angular-json-calendar.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-json-calendar\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-json-calendar\"] = factory();\n\telse\n\t\troot[\"angular-json-calendar\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f76a0bc13ed6424a2e2f\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _calendar = require('./calendar.provider');\n\nvar _calendar2 = require('./calendar.service');\n\nvar _calendar3 = require('./calendar.directive');\n\nexports.default = angular.module('bc.JsonCalendar', []).provider('bcCalendarConfig', _calendar.bcCalendarConfig).service('bcCalendarService', _calendar2.bcCalendarService).directive('bcCalendar', _calendar3.bcCalendarDirective);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { bcCalendarConfig } from './calendar.provider';\nimport { bcCalendarService } from './calendar.service';\nimport { bcCalendarDirective } from './calendar.directive';\n\nexport default angular.module('bc.JsonCalendar', [])\n    .provider('bcCalendarConfig', bcCalendarConfig)\n    .service('bcCalendarService', bcCalendarService)\n    .directive('bcCalendar', bcCalendarDirective)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarConfig = exports.bcCalendarConfig = function () {\n\n    // Define defaults\n\n    function bcCalendarConfig() {\n        _classCallCheck(this, bcCalendarConfig);\n\n        // The calendar will begin with today\n        this.startDate = moment(new Date().toISOString()).startOf('day');\n\n        // The default interval type [days|weeks|months]\n        this.interval = 'days';\n\n        // How many of the interval type should be generated\n        this.count = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdayStyle = {\n            letter: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n            abbreviation: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\n            word: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Satday']\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.wordType = 'abbreviation';\n    }\n\n    _createClass(bcCalendarConfig, [{\n        key: '$get',\n        value: function $get() {\n            return this;\n        }\n    }]);\n\n    return bcCalendarConfig;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.provider.js\n **/","export class bcCalendarConfig {\n\n    // Define defaults\n    constructor() {\n\n        // The calendar will begin with today\n        this.startDate = moment(new Date().toISOString()).startOf('day');\n\n        // The default interval type [days|weeks|months]\n        this.interval = 'days';\n\n        // How many of the interval type should be generated\n        this.count = 30;\n\n        // Define the different possible representations of the weekday\n        this.weekdayStyle = {\n            letter: [\n                'S',\n                'M',\n                'T',\n                'W',\n                'T',\n                'F',\n                'S',\n            ],\n            abbreviation: [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thur',\n                'Fri',\n                'Sat',\n            ],\n            word: [\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Satday',\n            ],\n        };\n\n        // Set the default word type (M vs Mon vs Monday)\n        this.wordType = 'abbreviation';\n\n\n    }\n\n\n\n\n    $get() {\n        return this;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.provider.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bcCalendarService = exports.bcCalendarService = function () {\n  function bcCalendarService() {\n    'ngInject';\n\n    _classCallCheck(this, bcCalendarService);\n  }\n\n  /**\n   * Test if days match\n   *\n   * @param {Date} date1\n   * @param {Date} date2\n   * @return {Bool} match\n   */\n  /*\n   *    daysMatch(date1, date2) {\n   *\n   *        let match = false;\n   *        const day1 = moment(date1).date();\n   *        const day2 = moment(date2).date();\n   *\n   *        if (day1 === day2) {\n   *            match = true;\n   *        }\n   *\n   *        return match;\n   *\n   *    }\n   */\n\n  /**\n   * Test if months match\n   *\n   * @param {Date} date1\n   * @param {Date} date2\n   * @return {Bool} match\n   */\n\n\n  _createClass(bcCalendarService, [{\n    key: 'doMonthsMatch',\n    value: function doMonthsMatch(date1, date2) {\n      var match = false;\n      var month1 = moment(date1).month();\n      var month2 = moment(date2).month();\n\n      if (month1 === month2) {\n        match = true;\n      }\n\n      return match;\n    }\n\n    /**\n     * Test if day is today\n     *\n     * @param {Date} date - The date to check\n     * @param {Date} today - The day to check against\n     * @return {Bool} isToday\n     */\n    /*\n     *    isToday(date, today) {\n     *\n     *        today = moment(today).startOf('day');\n     *\n     *        const dayToTest = moment(date).startOf('day');\n     *        const isToday = today.diff(dayToTest) ? false : true;\n     *\n     *        return isToday;\n     *\n     *    }\n     */\n\n    /**\n     * Update the date with the current time\n     *\n     * @param {Date} date\n     * @return {Date} updatedDate\n     */\n    /*\n     *    updateTime(date) {\n     *\n     *        let updatedDate;\n     *\n     *        // Get the current date\n     *        const jsDate = new Date().toISOString();\n     *        const currentHour = moment(jsDate).hour();\n     *        const currentMinutes = moment(jsDate).minutes();\n     *\n     *        // Zero out seconds and milliseconds\n     *        updatedDate = moment(date).set({\n     *            hour: currentHour,\n     *            minutes: currentMinutes,\n     *            second: 0,\n     *            millisecond: 0,\n     *        }).format();\n     *\n     *        return updatedDate;\n     *\n     *    }\n     */\n\n    /**\n     * Return an array of days for the passed in month\n     *\n     * @param {Integer} month\n     * @param {Integer} year\n     * @return {Array} days\n     */\n\n  }, {\n    key: 'getDaysInMonth',\n    value: function getDaysInMonth(month, year) {\n\n      var date = new Date(year, month, 1);\n      var days = [];\n\n      while (date.getMonth() === month) {\n        days.push(moment(date).hour(0).minute(0).second(0).format());\n        date.setDate(date.getDate() + 1);\n      }\n\n      return days;\n    }\n\n    /**\n     * Turn a count (e.g. '6') into an array: '[1,2,3,4,5,6]'\n     *\n     * @param {Integer} count\n     * @return {Array} days\n     */\n\n  }, {\n    key: 'createDaysArray',\n    value: function createDaysArray(count) {\n\n      var i = void 0;\n      var days = [];\n\n      for (i = 0; i < count; i += 1) {\n        days.push(i);\n      }\n\n      return days;\n    }\n  }]);\n\n  return bcCalendarService;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.service.js\n **/","export class bcCalendarService {\n\n    constructor(\n    ) {\n        'ngInject';\n\n    }\n\n\n\n\n    /**\n     * Test if days match\n     *\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Bool} match\n     */\n    /*\n     *    daysMatch(date1, date2) {\n     *\n     *        let match = false;\n     *        const day1 = moment(date1).date();\n     *        const day2 = moment(date2).date();\n     *\n     *        if (day1 === day2) {\n     *            match = true;\n     *        }\n     *\n     *        return match;\n     *\n     *    }\n     */\n\n\n    /**\n     * Test if months match\n     *\n     * @param {Date} date1\n     * @param {Date} date2\n     * @return {Bool} match\n     */\n    doMonthsMatch(date1, date2) {\n        let match = false;\n        const month1 = moment(date1).month();\n        const month2 = moment(date2).month();\n\n        if (month1 === month2) {\n            match = true;\n        }\n\n        return match;\n\n    }\n\n\n    /**\n     * Test if day is today\n     *\n     * @param {Date} date - The date to check\n     * @param {Date} today - The day to check against\n     * @return {Bool} isToday\n     */\n    /*\n     *    isToday(date, today) {\n     *\n     *        today = moment(today).startOf('day');\n     *\n     *        const dayToTest = moment(date).startOf('day');\n     *        const isToday = today.diff(dayToTest) ? false : true;\n     *\n     *        return isToday;\n     *\n     *    }\n     */\n\n\n    /**\n     * Update the date with the current time\n     *\n     * @param {Date} date\n     * @return {Date} updatedDate\n     */\n    /*\n     *    updateTime(date) {\n     *\n     *        let updatedDate;\n     *\n     *        // Get the current date\n     *        const jsDate = new Date().toISOString();\n     *        const currentHour = moment(jsDate).hour();\n     *        const currentMinutes = moment(jsDate).minutes();\n     *\n     *        // Zero out seconds and milliseconds\n     *        updatedDate = moment(date).set({\n     *            hour: currentHour,\n     *            minutes: currentMinutes,\n     *            second: 0,\n     *            millisecond: 0,\n     *        }).format();\n     *\n     *        return updatedDate;\n     *\n     *    }\n     */\n\n\n\n\n\n\n\n\n\n\n    /**\n     * Return an array of days for the passed in month\n     *\n     * @param {Integer} month\n     * @param {Integer} year\n     * @return {Array} days\n     */\n    getDaysInMonth(month, year) {\n\n        const date = new Date(year, month, 1);\n        const days = [];\n\n        while (date.getMonth() === month) {\n            days.push(moment(date).hour(0).minute(0).second(0).format());\n            date.setDate(date.getDate() + 1);\n        }\n\n        return days;\n\n    }\n\n\n    /**\n     * Turn a count (e.g. '6') into an array: '[1,2,3,4,5,6]'\n     *\n     * @param {Integer} count\n     * @return {Array} days\n     */\n    createDaysArray(count) {\n\n        let i;\n        const days = [];\n\n        for (i = 0; i < count; i += 1) {\n            days.push(i);\n        }\n\n        return days;\n\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.service.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bcCalendarDirective = bcCalendarDirective;\n\nvar _calendar = require('./calendar.controller');\n\nvar _calendar2 = require('./calendar.html');\n\nvar _calendar3 = _interopRequireDefault(_calendar2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bcCalendarDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?', // date - default to today\n            bcInterval: '@?', // string days|weeks|months - defaults to month\n            bcCount: '@?', // integer - default to 1\n            bcWordType: '@?' },\n        // string - default to 'abbreviation'\n        templateUrl: _calendar3.default,\n        link: linkFunction,\n        controller: _calendar.CalendarController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.directive.js\n **/","import { CalendarController } from './calendar.controller';\nimport template from './calendar.html';\n\nexport function bcCalendarDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcStartDate: '@?', // date - default to today\n            bcInterval: '@?', // string days|weeks|months - defaults to month\n            bcCount: '@?', // integer - default to 1\n            bcWordType: '@?', // string - default to 'abbreviation'\n        },\n        templateUrl: template,\n        link: linkFunction,\n        controller: CalendarController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, vm) {\n\n    }\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CalendarController = exports.CalendarController = function () {\n    function CalendarController(bcCalendarConfig, bcCalendarService) {\n        'ngInject';\n\n        _classCallCheck(this, CalendarController);\n\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n        console.log('config: ', bcCalendarConfig);\n\n        this._activate();\n    }\n\n    _createClass(CalendarController, [{\n        key: '_activate',\n        value: function _activate() {\n            // Define the starting day of the calendar\n            this.startDate = this.startDate || this.bcCalendarConfig.startDate;\n\n            // Define today's date\n            this.today = this.bcCalendarConfig.startDate;\n\n            // Define the style for weekday words (M vs Mon vs Monday)\n            this.weekdays = this.bcWordType ? this.bcCalendarConfig.weekdayStyle[this.bcWordType] : this.bcCalendarConfig.weekdayStyle[this.bcCalendarConfig.wordType];\n\n            console.log('startDate: ', this.startDate);\n\n            // Get the current day of the month\n            this.todayDayOfMonth = moment(this.startDate).date();\n\n            // Get the current weekday\n            this.todayDayOfWeek = moment(this.startDate).day();\n\n            var DEV_DATE = {\n                year: 2016,\n                month: 3,\n                day: 5\n            };\n\n            /*\n             *this.getDaysInMonth(DEV_DATE.year, DEV_DATE.month);\n             *this.isDayToday(new Date(DEV_DATE.year, DEV_DATE.month, DEV_DATE.day))\n             *this.isBeforeToday(new Date(DEV_DATE.year, DEV_DATE.month, DEV_DATE.day));\n             */\n        }\n\n        /**\n         * Check to see if the day is prior to the current date\n         * This is used to disable the unselectable days\n         *\n         * @param {Date} day\n         * @return {Bool}\n         */\n\n    }, {\n        key: 'isBeforeToday',\n        value: function isBeforeToday(date) {\n            return moment(date).isBefore(this.startDate);\n        }\n    }, {\n        key: 'isDaySelected',\n        value: function isDaySelected() {}\n\n        /**\n         * Check to see if the day matches the current date\n         *\n         * @param {Date} day\n         * @return {Bool}\n         */\n\n    }, {\n        key: 'isDayToday',\n        value: function isDayToday(date) {\n            return moment(date).isSame(this.startDate);\n        }\n    }, {\n        key: 'selectDate',\n        value: function selectDate() {}\n\n        /**\n         * Return an array of dates for the passed in month\n         *\n         * @param {Integer} year\n         * @param {Integer} month\n         * @return {Array} days\n         */\n\n    }, {\n        key: 'getDaysInMonth',\n        value: function getDaysInMonth(year, month) {\n            var date = new Date(year, month, 1);\n            var days = [];\n\n            while (date.getMonth() === month) {\n                days.push(moment(date).startOf('day').format());\n                date.setDate(date.getDate() + 1);\n            }\n\n            return days;\n        }\n    }]);\n\n    return CalendarController;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/calendar.controller.js\n **/","export class CalendarController {\n\n    constructor(\n        bcCalendarConfig, bcCalendarService\n    ) {\n        'ngInject';\n\n        this.bcCalendarConfig = bcCalendarConfig;\n        this.bcCalendarService = bcCalendarService;\n\n        console.log('config: ', bcCalendarConfig);\n\n        this._activate();\n\n    }\n\n\n\n\n    _activate() {\n        // Define the starting day of the calendar\n        this.startDate = this.startDate || this.bcCalendarConfig.startDate;\n\n        // Define today's date\n        this.today = this.bcCalendarConfig.startDate;\n\n        // Define the style for weekday words (M vs Mon vs Monday)\n        this.weekdays = this.bcWordType ?  this.bcCalendarConfig.weekdayStyle[this.bcWordType] :\n                this.bcCalendarConfig.weekdayStyle[this.bcCalendarConfig.wordType];\n\n        console.log('startDate: ', this.startDate);\n\n        // Get the current day of the month\n        this.todayDayOfMonth = moment(this.startDate).date();\n\n        // Get the current weekday\n        this.todayDayOfWeek = moment(this.startDate).day();\n\n\n\n        const DEV_DATE = {\n            year: 2016,\n            month: 3,\n            day: 5,\n        };\n\n        /*\n         *this.getDaysInMonth(DEV_DATE.year, DEV_DATE.month);\n         *this.isDayToday(new Date(DEV_DATE.year, DEV_DATE.month, DEV_DATE.day))\n         *this.isBeforeToday(new Date(DEV_DATE.year, DEV_DATE.month, DEV_DATE.day));\n         */\n\n\n    }\n\n\n    /**\n     * Check to see if the day is prior to the current date\n     * This is used to disable the unselectable days\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n    isBeforeToday(date) {\n        return moment(date).isBefore(this.startDate);\n    }\n\n\n    isDaySelected() {\n    }\n\n\n    /**\n     * Check to see if the day matches the current date\n     *\n     * @param {Date} day\n     * @return {Bool}\n     */\n    isDayToday(date) {\n        return moment(date).isSame(this.startDate);\n    }\n\n\n    selectDate() {\n    }\n\n\n    /**\n     * Return an array of dates for the passed in month\n     *\n     * @param {Integer} year\n     * @param {Integer} month\n     * @return {Array} days\n     */\n    getDaysInMonth(year, month) {\n        const date = new Date(year, month, 1);\n        const days = [];\n\n        while (date.getMonth() === month) {\n            days.push(moment(date).startOf('day').format());\n            date.setDate(date.getDate() + 1);\n        }\n\n        return days;\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/calendar.controller.js\n **/","var path = '/Users/bc/Code/open-source/angular-json-calendar/src/calendar.html';\nvar html = \"<section class=calendar> <header class=calendar__header> <span class=calendar__day data-ng-repeat=\\\"day in vm.weekdays track by $index\\\"> <strong class=calendar__time> {{ day }} </strong> </span> </header> <div class=calendar__week data-ng-repeat=\\\"week in vm.weeks track by $index\\\"> <span class=calendar__day data-ng-class=\\\"{ 'calendar__day--disabled': vm.isBeforeToday(day),\\n                       'calendar__day--today': vm.isDayToday(day) }\\\" data-ng-click=vm.selectDate(day) data-ng-repeat=\\\"day in week track by $index\\\"> <time class=calendar__time data-ng-class=\\\"{ 'calendar__time--selected': vm.isDaySelected(day) }\\\" datetime=\\\"{{ day | date:'MMMM Do, YYYY' }}\\\" title=\\\"{{ day }}\\\"> {{ day | date:'D' }} </time> </span> </div> </section>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/calendar.html\n ** module id = 5\n ** module chunks = 0 1\n **/"],"sourceRoot":""}